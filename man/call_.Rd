% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/call.R
\name{call_}
\alias{call_}
\alias{call_packages}
\alias{call_sources}
\alias{call_treaties}
\title{Call 'many' packages, sources, and data}
\usage{
call_packages(package, develop = FALSE)

call_sources(package, database, dataset = NULL)

call_treaties(dataset, treaty_type = NULL, variable = NULL, actor = NULL)
}
\arguments{
\item{package}{A character vector of package name.
For multiple packages,
please declare package names as a vector (e.g. c("package1", "package2")).}

\item{develop}{Would you like to download the develop
version of the package?
FALSE by default.
If TRUE, the function downloads the develop version of package from GitHub.}

\item{database}{A database from one of the many packages.}

\item{dataset}{A dataset in a database from one of the many packages.
NULL by default.
That is, all datasets in the database are used.
For multiple datasets, please declare datasets as a vector
(e.g. c("dataset1", "dataset2")).}

\item{treaty_type}{The type of treaties to be returned.
NULL, by default.
Other options are "bilateral" or "multilateral".}

\item{variable}{Would you like to get one, or more, specific variables
present in one or more datasets in the 'many' database?
NULL by default.
For multiple variables, please declare variable names as a vector.}

\item{actor}{An actor variable in dataset.
NULL by default.
If declared, a tibble of the traties and their member actors is returned.}
}
\value{
The \code{call_} functions return tibbles with the respective information.

\code{call_packages()} returns a tibble with the 'many packages'
currently available.
If one or more package names are provided,
these will be installed from Github.
}
\description{
The \code{call_} functions in \code{{manydata}} allows users to call,
install, and update different 'many' packages, as well as additional
information on databases and datasets across 'many packages'.
}
\details{
\code{call_packages()} finds and download other packages
that belong to the many universe of packages.
It allows users to rapidly access the names and other
descriptive information of these packages.
If users intend to download and install a package listed,
they can type the package name within the function.

\code{call_sources()} displays sources of the databases and datasets
in 'many' packages.
Please declare package, database, and dataset

Certain datasets, or consolidated databases, in 'many' packages
contains information on treaties which can be retrieved
with \code{call_treaties()}.
}
\section{Functions}{
\itemize{
\item \code{call_packages()}: Call, download, and update 'many' packages

\item \code{call_sources()}: Call sources for databases and datasets in 'many' packages

\item \code{call_treaties()}: Call treaties from 'many' datasets

}}
\examples{
\donttest{
#call_packages()
#call_packages("manyenviron")
call_sources("manydata", "emperors")
membs <- tibble::tibble( manyID = c("ROU-RUS[RFP]_1901A",
"ROU-RUS[RFP]_1901A", "GD16FI_1901A"),
StateID = c("ROU", "RUS", "DNK"),
Title = c("Convention Between Roumania And Russia Concerning Fishing
In The Danube And The Pruth",
"Convention Between Roumania And Russia Concerning Fishing
In The Danube And The Pruth",
"Convention Between The Governments Of Denmark And
The United Kingdom Of Great Britain
And Northern Ireland For Regulating The Fisheries
Of Their Respective Subjects Outside
Territorial Waters In The Ocean Surrounding The Faroe Islands"),
Beg = c("1901-02-22", "1901-02-22", "1901-06-24"))
call_treaties(membs)
call_treaties(membs, treaty_type = "bilaterals",
variable = c("Title", "Beg"))
call_treaties(membs, variable = c("Title", "Beg"), actor = "StateID")
}
}
