[{"path":[]},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement IHEID. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Contributions manydata, whether form issue identification, bug fixes, new code documentation encouraged welcome, research assistants (early) users package: Submit issue Fix bug implement new features Document existing code outlines propose change package Global Governance Observatory’s ecosystem. Please note manydata project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing","text":"Please use issue tracker GitHub identify problems suggest new functionality, submitting changes code. use issues identify bugs tasks, discuss feature requests, track implementation changes. submitting issue, please provide least ‘Type’ label best describes issue . useful issues ones precisely identify bug, propose test pass instead fails.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"adding-new-code","dir":"","previous_headings":"","what":"Adding new code","title":"Contributing","text":"Independent assigned code contributions welcome. writing new code, please follow tidyverse style guide based standard R guidelines. can help use packages lintr goodpractice ensure followed. packages incorporated checks made pull request made. styler package fixes non-invasive way code adhere tidyverse formatting rules, also provides RStudio Addins help task. run lintr goodpractice checks use styler file run:","code":"# basic lintr checking lintr::lint_package(path = \"manydata/\")  # goodpractices checks. Exclude length 80 goodpractice::gp(path = \"manydata/\",    checks = all_checks()[-c(8)])  # styler fix some of the styling issues styler::style_file(\"filePath\")"},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing","text":"title PR briefly describe change. Please include summary changes issues fixed relevant motivation context. List dependencies required change, indicating whether major (breaking), minor, patch change. body PR contain Fixes #issue-number. checklist provided check cases different elements listed completed make sure steps respected. Make sure package passes R CMD check running devtools::check() commiting changes pull request. want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed openning pull request. ’ve found bug, please file issue illustrates bug minimal reprex. Please follow manydata pull request guideline (https://github.com/globalgov/manydata/blob/main/.github/pull_request_template.md)","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"branches","dir":"","previous_headings":"Pull request process","what":"Branches","title":"Contributing","text":"use two main branches project: origin/main branch reserved fully functional releases model. develop branch reaches stable point, code maintainer merges back master branch, tags release number . origin/develop branch reflects latest model development stage. Contributers encouraged submit minor changes branch enhance existing functionality. New features may break existing functionality committed supporting branches. use two types supporting branches: Feature branches used develop new functionality. exist long feature developed, either merged develop branch incorporation release, deleted feature abandoned. Feature branches branch origin/develop. Hotfix branches used provide fixes severe bugs main branch. way, code maintainer incorporate (potentially unstable) changes develop branch fix issue. Branch names prefixed hotfix-. branching model based : https://nvie.com/posts/-successful-git-branching-model/.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"main-branch-code-maintainer-only","dir":"","previous_headings":"Pull request process","what":"Main Branch (code maintainer only)","title":"Contributing","text":"create release version code: Ensure repository --date: git pull. Switch main branch: git checkout master. Merge changes develop branch: git merge ---ff develop. Tag release version: git tag -VX.Y.Z -m \"VERSION-NAME\". Push changes repository git push origin master --tags.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"develop-branch-minor-changes-to-existing-functionality","dir":"","previous_headings":"Pull request process","what":"Develop Branch (minor changes to existing functionality)","title":"Contributing","text":"make minor changes directly develop branch, follow standard git procedures: Make sure switched develop branch project: git checkout -b develop. Make sure local version code --date: git pull origin develop. Make changes Stage changes commit: git add PATH--CHANGED-FILE. Commit changes using appropriate message: git commit -m \"DESCRIPTION\". Push commit: git push origin develop.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"feature-branches-new-functionality","dir":"","previous_headings":"Pull request process","what":"Feature Branches (new functionality)","title":"Contributing","text":"create new feature branch: git checkout -b myfeature develop. merge feature branch back develop:","code":"git checkout develop git merge --no-ff myfeature git branch -d myfeature git push origin develop"},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"hotfix-branches-to-fix-critical-bugs-in-release-versions","dir":"","previous_headings":"Pull request process","what":"Hotfix Branches (to fix critical bugs in release versions)","title":"Contributing","text":"create new hotfix branch: git checkout -b hotfix-VERSION master. merge hotfix back master (code maintainer ): develop: Every hotfix increment PATCH digit version number: hotfix branch V1.3.0 named hotfix-V1.3.1, new release tagged V1.3.1. merged master develop, hotfix branch can deleted: git branch -d hotfix-VERSION.","code":"git checkout master git merge --no-ff hotfix-VERSION git tag -a VERSION git push origin develop git checkout develop git merge --no-ff hotfix-VERSION"},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"commit-messages","dir":"","previous_headings":"Pull request process","what":"Commit messages","title":"Contributing","text":"Commits relate existing issues reference updated status issues, mention issue number (preceded hash symbol: #) commit description: Resolved #31 adding new function things, also updated documentation issue hash (.e. #31) preceded resolve, resolves, resolved, close, closes, closed, fix, fixes, fixed (capitalised ), status issue(s) mentioned updated automatically. current syntactical standard mention issue first provide short description committed changes relation issue. ancillary changes can mentioned comma. written single line, like : #{verb} {issue} {describe main action/changes}, {additional actions/changes}. Note important write structured commit message improve efficiency collaboration. Please make sure : * Making title clear concise correct reference issue described . * Using subject line description part commit message outlines many different changes. * Explaining details changes made made using bullet points. * Separating paragraph blank line.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"testing","dir":"","previous_headings":"Pull request process","what":"Testing","title":"Contributing","text":"use testthat package write unit tests. convention, tests located testthat/tests/. verify tests pass issuing commit existing code. run tests latest version manually: writing new function, consider writing unit test function. follow several conventions writing tests: unit test file test one aspects single function. makes easier identify source bugs, prevents lower-level tests failing higher-level functions change. naming convention test files : test-FILENAME_IN_R_DIRECTORY-FUNCTION_NAME.R, .e. test files named file containing original function R directory, pre-fixed “test”, optionally post-fixed name function tested. test requires auxiliary functions package, e.g. initialize network sample data, belong helper file. one helper file R file, named helper-FILENAME_IN_R_DIRECTORY-FUNCTION_NAME.R. Re-using existing test data preferable creating new data every test.","code":"git pull library(\"testthat\") testthat::test_dir(\"tests/testthat\")"},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Contributing","text":"final way contributing package developing vignettes/articles illustrate value added package. Please contact us directly proposals updating documentation, submit issue existing documentation unclear.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"versioning","dir":"","previous_headings":"","what":"Versioning","title":"Contributing","text":"Note package versioned according semantic versioning. means versions follow Major.Minor.Patch semantic format. minor major level version also given new version name, updated zzz.R file.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"for-developers-using-macos","dir":"","previous_headings":"","what":"For developers using MacOS","title":"Contributing","text":"Develops using MacOS might meet problems compiling packages since compiling configuration R MacOS usually incorrect. one meet error error info “/usr/bin/ld: find -lgfortran”, can either correct configuration follows following steps solve problem: 1. Run “.libPaths()” command R get path, e.g. one might get “/Library/Frameworks/R.framework/Versions/3.6/Resources/library” 2. path one get first step “something/library”, open file “something/etc/Makeconf” comment line starting “FLIBS”. e.g. one might open file ” /Library/Frameworks/R.framework/Versions/3.6/Resources/etc/Makeconf” change line “FLIBS = -L/usr/local/gfortran/lib/gcc/x86_64-apple-darwin15/6.1.0 -L/usr/local/gfortran/lib -lgfortran -lquadmath -lm” “#FLIBS = -L/usr/local/gfortran/lib/gcc/x86_64-apple-darwin15/6.1.0 -L/usr/local/gfortran/lib -lgfortran -lquadmath - lm”","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"https://globalgov.github.io/manydata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Hollway. Maintainer, author, contributor.            IHEID Henrique Sposito. Contributor.            IHEID Bernhard Bieri. Contributor.            IHEID Esther Peev. Contributor.            IHEID Jael Tan. Contributor.            IHEID","code":""},{"path":"https://globalgov.github.io/manydata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hollway J (2021). manydata: portal global governance data. https://github.com/globalgov/manydata.","code":"@Manual{,   title = {manydata: The portal for global governance data},   author = {James Hollway},   year = {2021},   url = {https://github.com/globalgov/manydata}, }"},{"path":"https://globalgov.github.io/manydata/index.html","id":"manydata-","dir":"","previous_headings":"","what":"A Portal for Global Governance Data","title":"A Portal for Global Governance Data","text":"manydata portal ‘many’ packages containing many datacubes, containing many related datasets many issue-domains, actors institutions global governance. {manytreaties} contains data international environmental, trade, health agreements, {manystates}: contains data states throughout history. Datasets related one another within datacube particular coding system follows principles across different packages. instance, {manytreaties}, agreements parties datacubes standardised IDs (manyID), date variables Begin End denote beginning end dates treaties respectively. beginning date derived signature entry force date, whichever earliest available date treaty. Standardised IDs across datasets allow observations matched across datasets values can compared expanded relevant. specific variable names allows comparison information across datasets different sources. enables users point recurrence, difference absence observations datasets extract robust data researching particular governance domain. parties datacube contains additional date variables state member’s ratification, signature, entry force, end dates treaty. Data memberships datacube comparable across datasets standardised state names stateIDs, made possible manypkgs::code_states() function. information state, including Begin End date, can found {manystates} package. enable users work data packages, manydata contains tools : calling data packages, comparing individual datasets, consolidating datacubes different ways. intend manydata useful: start research project, access gather recent versions well-regarded datasets, see available, describe, explore data, middle project, facilitate analysis, comparison modelling, end project, help conducting robustness checks, preparing replication scripts, writing next grant application.","code":""},{"path":"https://globalgov.github.io/manydata/index.html","id":"call-many-packages","dir":"","previous_headings":"","what":"Call ‘many’ packages","title":"A Portal for Global Governance Data","text":"easiest way install manydata directly CRAN. development version package manydata can also downloaded GitHub. manydata installed, call_ functions can used discover ‘many packages’ currently available /download update packages needed. , call_packages() can used. call_sources() function obtains information sources original locations desired datasets.","code":"install.packages(\"manydata\") # install.packages(\"remotes\") remotes::install_github(\"globalgov/manydata\") library(manydata) call_packages() # lists all packages currently available call_packages(\"manytrade\") # downloads and installs this package call_sources(\"emperors\") #> # A tibble: 3 × 3 #>   Dataset    Source                                                        URL   #>   <chr>      <chr>                                                         <chr> #> 1 Wikipedia  Wikipedia, 'List_of_Roman_emperors',  https://en.wikipedia.o… http… #> 2 UNRV       United Nations of Roma Victrix, 'Roman Emperor list', https:… http… #> 3 Britannica Britannica, 'List of Roman emperors', https://www.britannica… http…"},{"path":"https://globalgov.github.io/manydata/index.html","id":"comparing-many-data","dir":"","previous_headings":"","what":"Comparing ‘many’ data","title":"A Portal for Global Governance Data","text":"first thing users data packages may want identify datasets might contribute research goals. One major advantage storing datasets datacubes facilitates comparison analysis multiple datasets specific domain global governance. aid selection datasets use data within datacubes, compare_ functions manydata allows users quickly compare different information datacubes /datasets across ‘many packages’. include comparison data observations, variables, ranges, overlap among observations, missing observations, conflicts among observations. now, let’s work Roman Emperors datacube included manydata. can get quick summary datasets included package following command: can see three named datasets relating emperors : wikipedia (dataset assembled Wikipedia pages), UNVR (United Nations Roman Vitrix), britannica (Britannica Encyclopedia List Roman Emperors). datasets advantages may wish understand similarities differences, summarise variables across , perhaps also rerun models across . compare_dimensions() function returns tibble observations variables dataset within specified datacube many package. compare_overlap() function returns tibble number overlapping observations specified variable (specify using key argument) across datasets within datacube.  compare_missing() function returns tibble number percentage missing observations datasets within datacube.  Finally, compare_categories() function help researchers identify variables across datasets within datacube relate one another five categories. Observations matched “ID” variable facilitate comparison. categories include ‘confirmed’, ‘majority’, ‘unique’, ‘missing’, ‘conflict’. Observations ‘confirmed’ non-NA values across datasets, ‘majority’ non-NA values across datasets. ‘Unique’ observations present one dataset ‘missing’ observations indicate non-NA values across datasets variable. Observations ‘conflict’ datasets different non-NA values.","code":"data(package = \"manydata\") data(emperors, package = \"manydata\") emperors compare_dimensions(emperors) #> # A tibble: 3 × 5 #>   Dataset    Observations Variables                    Earliest_Date Latest_Date #>   <chr>      <chr>        <chr>                        <chr>         <chr>       #> 1 Wikipedia  69           ID, Begin, End, FullName, B… -0062-09-23   0421-09-02  #> 2 UNRV       98           ID, Begin, End, Birth, Deat… -0063-01-01   0518-12-31  #> 3 Britannica 87           ID, Begin, End               -0031-01-01   0491-12-31 plot(compare_overlap(emperors, key = \"ID\")) plot(compare_missing(emperors)) plot(compare_categories(emperors, key = \"ID\"))"},{"path":"https://globalgov.github.io/manydata/index.html","id":"consolidating-many-data","dir":"","previous_headings":"","what":"Consolidating ‘many’ data","title":"A Portal for Global Governance Data","text":"retrieve individual dataset datacube, can use pluck() function. However, real value various ‘many packages’ multiple datasets relating phenomenon presented together. manydata contains flexible methods consolidating different datasets datacube single dataset. example, rows (observations) one dataset, add columns (variables) another dataset. conflicts values across different datasets, several ways may resolved. consolidate() function facilitates consolidating set datasets, datacube, ‘many’ package single dataset combination rows columns. function includes separate arguments rows columns, well resolve conflicts observations across datasets. key argument indicates column collapse datasets . provides users considerable flexibility combine data. example, users may wish see units variables coded “” dataset (.e. units variables present least one datasets datacube) units variables coded “every” dataset (.e. units variables present datasets datacube). Users can also choose want resolve conflicts observations consolidate() several ‘resolve’ methods: coalesce: first non-NA value max: largest value min: smallest value mean: average value median: median value random: random value Alternatively, users can “favour” dataset datacube others:","code":"pluck(emperors, \"Wikipedia\") consolidate(datacube = emperors, join = \"full\",             resolve = \"coalesce\", key = \"ID\") #> # A tibble: 69 × 14 #>    ID       Begin End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause #>    <chr>    <mda> <mda> <chr>    <mda> <mda> <chr>     <chr>         <chr> <chr> #>  1 Augustus -002… 0014… Imperat… -006… 0014… Rome      Italia        Birt… Assa… #>  2 Tiberius 0014… 0037… Tiberiv… -004… 0037… Rome      Italia        Birt… Assa… #>  3 Caligula 0037… 0041… Gaivs I… 0012… 0041… Antitum   Italia        Birt… Assa… #>  4 Claudius 0041… 0054… Tiberiv… -000… 0054… Lugdunum  Gallia Lugdu… Birt… Assa… #>  5 Nero     0054… 0068… Nero Cl… 0037… 0068… Antitum   Italia        Birt… Suic… #>  6 Galba    0068… 0069… Servivs… -000… 0069… Terracina Italia        Seiz… Assa… #>  7 Otho     0069… 0069… Marcvs … 0032… 0069… Terentin… Italia        Appo… Suic… #>  8 Vitelli… 0069… 0069… Avlvs V… 0015… 0069… Rome      Italia        Seiz… Assa… #>  9 Vespasi… 0069… 0079… Titvs F… 0009… 0079… Falacrine Italia        Seiz… Natu… #> 10 Titus    0079… 0081… Titvs F… 0039… 0081… Rome      Italia        Birt… Natu… #> # ℹ 59 more rows #> # ℹ 4 more variables: Killer <chr>, Dynasty <chr>, Era <chr>, Notes <chr> consolidate(datacube = emperors, join = \"inner\",             resolve = \"coalesce\", key = \"ID\") #> # A tibble: 65 × 14 #>    ID       Begin End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause #>    <chr>    <mda> <mda> <chr>    <mda> <mda> <chr>     <chr>         <chr> <chr> #>  1 Augustus -002… 0014… Imperat… -006… 0014… Rome      Italia        Birt… Assa… #>  2 Tiberius 0014… 0037… Tiberiv… -004… 0037… Rome      Italia        Birt… Assa… #>  3 Caligula 0037… 0041… Gaivs I… 0012… 0041… Antitum   Italia        Birt… Assa… #>  4 Claudius 0041… 0054… Tiberiv… -000… 0054… Lugdunum  Gallia Lugdu… Birt… Assa… #>  5 Nero     0054… 0068… Nero Cl… 0037… 0068… Antitum   Italia        Birt… Suic… #>  6 Galba    0068… 0069… Servivs… -000… 0069… Terracina Italia        Seiz… Assa… #>  7 Otho     0069… 0069… Marcvs … 0032… 0069… Terentin… Italia        Appo… Suic… #>  8 Vitelli… 0069… 0069… Avlvs V… 0015… 0069… Rome      Italia        Seiz… Assa… #>  9 Vespasi… 0069… 0079… Titvs F… 0009… 0079… Falacrine Italia        Seiz… Natu… #> 10 Titus    0079… 0081… Titvs F… 0039… 0081… Rome      Italia        Birt… Natu… #> # ℹ 55 more rows #> # ℹ 4 more variables: Killer <chr>, Dynasty <chr>, Era <chr>, Notes <chr> consolidate(datacube = emperors, join = \"full\", resolve = \"max\", key = \"ID\") #> # A tibble: 69 × 14 #>    ID       Begin End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause #>    <chr>    <mda> <mda> <chr>    <mda> <mda> <chr>     <chr>         <chr> <chr> #>  1 Augustus -002… 0014… Imperat… -006… 0014… Rome      Italia        Birt… Assa… #>  2 Tiberius 0014… 0037… Tiberiv… -004… 0037… Rome      Italia        Birt… Assa… #>  3 Caligula 0037… 0041… Gaivs I… 0012… 0041… Antitum   Italia        Birt… Assa… #>  4 Claudius 0041… 0054… Tiberiv… -000… 0054… Lugdunum  Gallia Lugdu… Birt… Assa… #>  5 Nero     0054… 0068… Nero Cl… 0037… 0068… Antitum   Italia        Birt… Suic… #>  6 Galba    0068… 0069… Servivs… -000… 0069… Terracina Italia        Seiz… Assa… #>  7 Otho     0069… 0069… Marcvs … 0032… 0069… Terentin… Italia        Appo… Suic… #>  8 Vitelli… 0069… 0069… Avlvs V… 0015… 0069… Rome      Italia        Seiz… Assa… #>  9 Vespasi… 0069… 0079… Titvs F… 0009… 0079… Falacrine Italia        Seiz… Natu… #> 10 Titus    0079… 0081… Titvs F… 0039… 0081… Rome      Italia        Birt… Natu… #> # ℹ 59 more rows #> # ℹ 4 more variables: Killer <chr>, Dynasty <chr>, Era <chr>, Notes <chr> consolidate(datacube = emperors, join = \"inner\", resolve = \"min\", key = \"ID\") #> # A tibble: 65 × 14 #>    ID       Begin End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause #>    <chr>    <mda> <mda> <chr>    <mda> <mda> <chr>     <chr>         <chr> <chr> #>  1 Augustus -002… -0014 Gaius J… -006… 0014  Rome      Italia        Birt… Assa… #>  2 Tiberius 0014… 0037  Tiberiu… -004… 0037  Rome      Italia        Birt… Assa… #>  3 Caligula 0037… 0041  Gaius C… 0012… 0014  Antitum   Italia        Birt… Assa… #>  4 Claudius 0041… 0054  Tiberiu… -000… 0041  Lugdunum  Gallia Lugdu… Birt… Assa… #>  5 Nero     0054… 0068  Claudiu… 0037… 0068  Antitum   Italia        Birt… Suic… #>  6 Galba    0068… 0069  Servius… -000… 0069  Terracina Italia        Seiz… Assa… #>  7 Otho     0069… 0069  Marcus … 0032… 0069  Terentin… Italia        Appo… Suic… #>  8 Vitelli… 0069… 0069  Aulus V… 0015… 0069  Rome      Italia        Seiz… Assa… #>  9 Vespasi… 0069… 0079  Titus F… 0009… 0079  Falacrine Italia        Seiz… Natu… #> 10 Titus    0079… 0081  Titus F… 0039… 0079  Rome      Italia        Birt… Natu… #> # ℹ 55 more rows #> # ℹ 4 more variables: Killer <chr>, Dynasty <chr>, Era <chr>, Notes <chr> consolidate(emperors[c(\"UNRV\",\"Britannica\",\"Wikipedia\")], join = \"left\", resolve = \"coalesce\", key = \"ID\") #> # A tibble: 98 × 14 #>    ID     Begin End   Birth Death FullName Dynasty CityBirth ProvinceBirth Rise  #>    <chr>  <mda> <mda> <mda> <mda> <chr>    <chr>   <chr>     <chr>         <chr> #>  1 Augus… -0027 -0014 -0063 0014  Gaius J… Julio-… Rome      Italia        Birt… #>  2 Tiber… 0014  0037  -0042 0037  Tiberiu… Julio-… Rome      Italia        Birt… #>  3 Calig… 0037  0041  0012  0014  Gaius C… Julio-… Antitum   Italia        Birt… #>  4 Claud… 0041  0054  -0010 0041  Tiberiu… Julio-… Lugdunum  Gallia Lugdu… Birt… #>  5 Nero   0054  0068  0037  0068  Claudiu… Julio-… Antitum   Italia        Birt… #>  6 Galba  0068  0069  -0003 0069  Servius… Year o… Terracina Italia        Seiz… #>  7 Otho   0069  0069  0032  0069  Marcus … Year o… Terentin… Italia        Appo… #>  8 Vitel… 0069  0069  0015  0069  Aulus V… Year o… Rome      Italia        Seiz… #>  9 Vespa… 0069  0079  0009  0079  Titus F… Year o… Falacrine Italia        Seiz… #> 10 Titus  0079  0081  0039  0079  Titus F… Flavian Rome      Italia        Birt… #> # ℹ 88 more rows #> # ℹ 4 more variables: Cause <chr>, Killer <chr>, Era <chr>, Notes <chr>"},{"path":"https://globalgov.github.io/manydata/index.html","id":"contributing-to-the-many-packages-universe","dir":"","previous_headings":"","what":"Contributing to the many packages universe","title":"A Portal for Global Governance Data","text":"information developers data contributors ‘many packages’, please see {manypkgs} website.","code":""},{"path":"https://globalgov.github.io/manydata/index.html","id":"funding-details","dir":"","previous_headings":"","what":"Funding details","title":"A Portal for Global Governance Data","text":"Development package funded Swiss National Science Foundation (SNSF) Grant Number 188976: “Power Networks Rate Change Institutional Complexes” (PANARCHIC).","code":""},{"path":"https://globalgov.github.io/manydata/reference/call_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Call, download, and update many* packages — call_packages","title":"Call, download, and update many* packages — call_packages","text":"call_packages() finds download packages belong many universe packages. allows users rapidly access names descriptive information packages. users intend download install package listed, can type package name within function.","code":""},{"path":"https://globalgov.github.io/manydata/reference/call_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call, download, and update many* packages — call_packages","text":"","code":"call_packages(package, develop = FALSE)"},{"path":"https://globalgov.github.io/manydata/reference/call_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call, download, and update many* packages — call_packages","text":"package character vector package name. multiple packages, please declare package names vector (e.g. c(\"package1\", \"package2\")). develop like download develop version package? FALSE default.","code":""},{"path":"https://globalgov.github.io/manydata/reference/call_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call, download, and update many* packages — call_packages","text":"call_packages() returns tibble 'many packages' currently available. one package names provided, installed Github.","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/reference/call_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call, download, and update many* packages — call_packages","text":"","code":"# \\donttest{ #call_packages() #call_packages(\"manyenviron\") # }"},{"path":"https://globalgov.github.io/manydata/reference/call_releases.html","id":null,"dir":"Reference","previous_headings":"","what":"Call releases historical milestones/releases — call_releases","title":"Call releases historical milestones/releases — call_releases","text":"function take data frame details information, usefully, Github repository listing.","code":""},{"path":"https://globalgov.github.io/manydata/reference/call_releases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call releases historical milestones/releases — call_releases","text":"","code":"call_releases(repo, begin = NULL, end = NULL)"},{"path":"https://globalgov.github.io/manydata/reference/call_releases.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Call releases historical milestones/releases — call_releases","text":"https://benalexkeen.com/creating--timeline-graphic-using-r--ggplot2/","code":""},{"path":"https://globalgov.github.io/manydata/reference/call_releases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call releases historical milestones/releases — call_releases","text":"repo github repository track, e.g. \"globalgov/manydata\" begin begin tracking repository milestones. default NULL, two months first release. end end tracking repository milestones. default NULL, two months latest release.","code":""},{"path":"https://globalgov.github.io/manydata/reference/call_releases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call releases historical milestones/releases — call_releases","text":"ggplot graph object","code":""},{"path":"https://globalgov.github.io/manydata/reference/call_releases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Call releases historical milestones/releases — call_releases","text":"function creates project timeline graphic using ggplot2 historical milestones milestone statuses gathered specified GitHub repository.","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/reference/call_releases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call releases historical milestones/releases — call_releases","text":"","code":"# \\donttest{ #call_releases(\"globalgov/manydata\") #call_releases(\"manypkgs\") # }"},{"path":"https://globalgov.github.io/manydata/reference/call_sources.html","id":null,"dir":"Reference","previous_headings":"","what":"Call sources and citations — call_sources","title":"Call sources and citations — call_sources","text":"functions call source citation information available datacube dataset. function can used console, called another function call consolidate() pluck(), used automatically consistently populate help files.","code":""},{"path":"https://globalgov.github.io/manydata/reference/call_sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call sources and citations — call_sources","text":"","code":"call_sources(x)  call_citations(x, output = c(\"console\", \"help\"))"},{"path":"https://globalgov.github.io/manydata/reference/call_sources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call sources and citations — call_sources","text":"x datacube dataset output Whether output formatted \"console\" \"help\" page.","code":""},{"path":"https://globalgov.github.io/manydata/reference/call_treaties.html","id":null,"dir":"Reference","previous_headings":"","what":"Call treaties from 'many' datasets — call_treaties","title":"Call treaties from 'many' datasets — call_treaties","text":"Call treaties 'many' datasets","code":""},{"path":"https://globalgov.github.io/manydata/reference/call_treaties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call treaties from 'many' datasets — call_treaties","text":"","code":"call_treaties(   dataset,   treaty_type = NULL,   variable = NULL,   actor = NULL,   key = \"manyID\" )"},{"path":"https://globalgov.github.io/manydata/reference/call_treaties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call treaties from 'many' datasets — call_treaties","text":"dataset dataset datacube one many packages. NULL default. , datasets datacube used. multiple datasets, please declare datasets vector (e.g. c(\"dataset1\", \"dataset2\")). treaty_type type treaties returned. NULL, default. options \"bilateral\" \"multilateral\". variable like get one, , specific variables present one datasets 'many' datacube? NULL default. multiple variables, please declare variable names vector. actor actor variable dataset. NULL default. declared, tibble treaties member actors returned. key variable key join datasets. 'manyID' default.","code":""},{"path":"https://globalgov.github.io/manydata/reference/call_treaties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call treaties from 'many' datasets — call_treaties","text":"call_treaties() returns tibble list agreements.","code":""},{"path":"https://globalgov.github.io/manydata/reference/call_treaties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Call treaties from 'many' datasets — call_treaties","text":"Certain datasets, consolidated datacubes, 'many' packages contains information treaties can retrieved call_treaties().","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/reference/call_treaties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call treaties from 'many' datasets — call_treaties","text":"","code":"# \\donttest{ membs <- dplyr::tibble(manyID = c(\"ROU-RUS[RFP]_1901A\", \"ROU-RUS[RFP]_1901A\", \"GD16FI_1901A\"), stateID = c(\"ROU\", \"RUS\", \"DNK\"), Title = c(\"Convention Between Roumania And Russia Concerning Fishing In The Danube And The Pruth\", \"Convention Between Roumania And Russia Concerning Fishing In The Danube And The Pruth\", \"Convention Between The Governments Of Denmark And The United Kingdom Of Great Britain And Northern Ireland For Regulating The Fisheries Of Their Respective Subjects Outside Territorial Waters In The Ocean Surrounding The Faroe Islands\"), Begin = c(\"1901-02-22\", \"1901-02-22\", \"1901-06-24\")) call_treaties(membs) #> # A tibble: 2 × 1 #>   manyID             #>   <chr>              #> 1 ROU-RUS[RFP]_1901A #> 2 GD16FI_1901A       call_treaties(membs, treaty_type = \"bilateral\", variable = c(\"Title\", \"Begin\")) #> # A tibble: 1 × 3 #>   manyID             Title                                                 Begin #>   <chr>              <chr>                                                 <chr> #> 1 ROU-RUS[RFP]_1901A \"Convention Between Roumania And Russia Concerning F… 1901… call_treaties(membs, variable = c(\"Title\", \"Begin\"), actor = \"stateID\") #> # A tibble: 2 × 4 #>   manyID             Memberships Title                                     Begin #>   <chr>              <chr>       <chr>                                     <chr> #> 1 GD16FI_1901A       DNK         \"Convention Between The Governments Of D… 1901… #> 2 ROU-RUS[RFP]_1901A ROU, RUS    \"Convention Between Roumania And Russia … 1901… # }"},{"path":"https://globalgov.github.io/manydata/reference/compare_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare categories in 'many' datacubes — compare_categories","title":"Compare categories in 'many' datacubes — compare_categories","text":"Compare categories 'many' datacubes","code":""},{"path":"https://globalgov.github.io/manydata/reference/compare_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare categories in 'many' datacubes — compare_categories","text":"","code":"compare_categories(   datacube,   dataset = \"all\",   key = \"manyID\",   variable = \"all\",   category = \"all\" )"},{"path":"https://globalgov.github.io/manydata/reference/compare_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare categories in 'many' datacubes — compare_categories","text":"datacube datacube one many packages. dataset dataset datacube one many packages. default \"\". , datasets datacube used. select two datasets, please declare vector. key variable key join datasets. 'manyID' default. variable like focus one, , specific variables present one datasets 'many' datacube? default \"\". multiple variables, please declare variable names vector. category like focus one specific code category? default \"\" returned. options include \"confirmed\", \"unique\", \"missing\", \"conflict\", \"majority\". multiple variables, please declare categories vector.","code":""},{"path":"https://globalgov.github.io/manydata/reference/compare_categories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare categories in 'many' datacubes — compare_categories","text":"Confirmed values datasets datacube. Unique values appear datasets datacube. Missing values missing datasets datacube. Conflict values different number datasets datacube. Majority values value multiple, , datasets datacube.","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/reference/compare_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare categories in 'many' datacubes — compare_categories","text":"","code":"# \\donttest{ compare_categories(emperors, key = \"ID\") #> There were 151 matched observations by ID variable across datasets in datacube. #> # A tibble: 103 × 35 #>    ID        `Wikipedia$Begin` `UNRV$Begin` `Britannica$Begin` `Begin (3)` #>    <chr>     <mdate>           <mdate>      <mdate>            <chr>       #>  1 Augustus  -0026-01-16       -0027        -0031              conflict    #>  2 Tiberius  0014-09-18        0014         0014               majority    #>  3 Caligula  0037-03-18        0037         0037               majority    #>  4 Claudius  0041-01-25        0041         0041               majority    #>  5 Nero      0054-10-13        0054         0054               majority    #>  6 Galba     0068-06-08        0068         0068               majority    #>  7 Otho      0069-01-15        0069         0069-01            conflict    #>  8 Vitellius 0069-04-17        0069         0069-07            conflict    #>  9 Vespasian 0069-12-21        0069         0069               majority    #> 10 Titus     0079-06-24        0079         0079               majority    #> # ℹ 93 more rows #> # ℹ 30 more variables: `Wikipedia$End` <mdate>, `UNRV$End` <mdate>, #> #   `Britannica$End` <mdate>, `End (3)` <chr>, `Wikipedia$FullName` <chr>, #> #   `UNRV$FullName` <chr>, `FullName (2)` <chr>, `Wikipedia$Birth` <mdate>, #> #   `UNRV$Birth` <mdate>, `Birth (2)` <chr>, `Wikipedia$Death` <mdate>, #> #   `UNRV$Death` <mdate>, `Death (2)` <chr>, `Wikipedia$CityBirth` <chr>, #> #   `CityBirth (1)` <chr>, `Wikipedia$ProvinceBirth` <chr>, … compare_categories(datacube = emperors, dataset = c(\"wikipedia\", \"UNRV\"), key = \"ID\", variable = c(\"Beg\", \"End\"), category = c(\"conflict\", \"unique\")) #> There were 0 matched observations by ID variable across datasets in datacube. #> # A tibble: 98 × 3 #>    ID        `UNRV$End` `End (1)` #>    <chr>     <mdate>    <chr>     #>  1 Augustus  -0014      unique    #>  2 Tiberius  0037       unique    #>  3 Caligula  0041       unique    #>  4 Claudius  0054       unique    #>  5 Nero      0068       unique    #>  6 Galba     0069       unique    #>  7 Otho      0069       unique    #>  8 Vitellius 0069       unique    #>  9 Vespasian 0079       unique    #> 10 Titus     0081       unique    #> # ℹ 88 more rows plot(compare_categories(emperors, key = \"ID\")) #> There were 151 matched observations by ID variable across datasets in datacube.  plot(compare_categories(datacube = emperors, dataset = c(\"wikipedia\", \"UNRV\"), key = \"ID\", variable = c(\"Beg\", \"End\"), category = c(\"conflict\", \"unique\"))) #> There were 0 matched observations by ID variable across datasets in datacube.  # }"},{"path":"https://globalgov.github.io/manydata/reference/compare_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare dimensions for 'many' data — compare_dimensions","title":"Compare dimensions for 'many' data — compare_dimensions","text":"Compare dimensions 'many' data","code":""},{"path":"https://globalgov.github.io/manydata/reference/compare_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare dimensions for 'many' data — compare_dimensions","text":"","code":"compare_dimensions(datacube, dataset = \"all\")"},{"path":"https://globalgov.github.io/manydata/reference/compare_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare dimensions for 'many' data — compare_dimensions","text":"datacube datacube one many packages. dataset dataset datacube one many packages. default, \"\". , datasets datacube used. select two datasets, please declare vector.","code":""},{"path":"https://globalgov.github.io/manydata/reference/compare_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare dimensions for 'many' data — compare_dimensions","text":"compare_dimensions() returns tibble information dataset including number observations, number variables, earliest date, latest date observations.","code":""},{"path":"https://globalgov.github.io/manydata/reference/compare_dimensions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare dimensions for 'many' data — compare_dimensions","text":"compare_dimensions() compares number observations, variables, earliest date, latest date observations datasets 'many' datacube.","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/reference/compare_dimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare dimensions for 'many' data — compare_dimensions","text":"","code":"# \\donttest{ compare_dimensions(emperors) #> # A tibble: 3 × 5 #>   Dataset    Observations Variables                    Earliest_Date Latest_Date #>   <chr>      <chr>        <chr>                        <chr>         <chr>       #> 1 Wikipedia  69           ID, Begin, End, FullName, B… -0062-09-23   0421-09-02  #> 2 UNRV       98           ID, Begin, End, Birth, Deat… -0063-01-01   0518-12-31  #> 3 Britannica 87           ID, Begin, End               -0031-01-01   0491-12-31  # }"},{"path":"https://globalgov.github.io/manydata/reference/compare_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare missing observations for 'many' data — compare_missing","title":"Compare missing observations for 'many' data — compare_missing","text":"Compare missing observations 'many' data","code":""},{"path":"https://globalgov.github.io/manydata/reference/compare_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare missing observations for 'many' data — compare_missing","text":"","code":"compare_missing(datacube, dataset = \"all\", variable = \"all\")"},{"path":"https://globalgov.github.io/manydata/reference/compare_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare missing observations for 'many' data — compare_missing","text":"datacube datacube one many packages. dataset dataset datacube one many packages. NULL default. , datasets datacube used. select two datasets, please declare vector. variable like focus one, , specific variables present one datasets 'many' datacube? default \"\". multiple variables, please declare variable names vector.","code":""},{"path":"https://globalgov.github.io/manydata/reference/compare_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare missing observations for 'many' data — compare_missing","text":"compare_missing() returns tibble information dataset including number observations, number variables, earliest date, latest date observations.","code":""},{"path":"https://globalgov.github.io/manydata/reference/compare_missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare missing observations for 'many' data — compare_missing","text":"compare_missing() compares missing observations variables dataset 'many' datacube.","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/reference/compare_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare missing observations for 'many' data — compare_missing","text":"","code":"# \\donttest{ compare_missing(emperors) #> # A tibble: 24 × 6 #>    Variable  Dataset    Class     Count Missing `Percent Missing` #>    <chr>     <chr>      <chr>     <dbl>   <dbl>             <dbl> #>  1 Begin     Wikipedia  mdate        69       0              0    #>  2 Begin     UNRV       mdate        98       0              0    #>  3 Begin     Britannica mdate        87       0              0    #>  4 Birth     Wikipedia  mdate        69       6              8.7  #>  5 Birth     UNRV       mdate        98      24             24.5  #>  6 Cause     Wikipedia  character    69       1              1.45 #>  7 CityBirth Wikipedia  character    69      18             26.1  #>  8 Dataset   Wikipedia  character    69       0              0    #>  9 Dataset   UNRV       character    98       0              0    #> 10 Dataset   Britannica character    87       0              0    #> # ℹ 14 more rows plot(compare_missing(emperors))  # }"},{"path":"https://globalgov.github.io/manydata/reference/compare_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare the overlap between datasets in 'many' datacubes — compare_overlap","title":"Compare the overlap between datasets in 'many' datacubes — compare_overlap","text":"Compare overlap datasets 'many' datacubes","code":""},{"path":"https://globalgov.github.io/manydata/reference/compare_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare the overlap between datasets in 'many' datacubes — compare_overlap","text":"","code":"compare_overlap(datacube, dataset = \"all\", key = \"manyID\")"},{"path":"https://globalgov.github.io/manydata/reference/compare_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare the overlap between datasets in 'many' datacubes — compare_overlap","text":"datacube datacube one many packages. dataset dataset datacube one many packages. default \"\". , datasets datacube used. key variable key join datasets. 'manyID' default.","code":""},{"path":"https://globalgov.github.io/manydata/reference/compare_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare the overlap between datasets in 'many' datacubes — compare_overlap","text":"compare_overlap() returns tibble information dataset number overlapping observations.","code":""},{"path":"https://globalgov.github.io/manydata/reference/compare_overlap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare the overlap between datasets in 'many' datacubes — compare_overlap","text":"compare_overlap() compares overlap \"key\" observations dataset 'many' datacube.","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/reference/compare_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare the overlap between datasets in 'many' datacubes — compare_overlap","text":"","code":"# \\donttest{ compare_overlap(emperors, key = \"ID\") #> # A tibble: 7 × 2 #>   `Datasets from emperors`  `Overlapping Observations by ID` #>   <chr>                                                <int> #> 1 Wikipedia                                                1 #> 2 UNRV                                                    15 #> 3 Britannica                                               1 #> 4 Wikipedia/UNRV                                           0 #> 5 Wikipedia/Britannica                                     3 #> 6 UNRV/Britannica                                         18 #> 7 Wikipedia/UNRV/Britannica                               65 plot(compare_overlap(emperors, key = \"ID\"))  # }"},{"path":"https://globalgov.github.io/manydata/reference/consolidate.html","id":null,"dir":"Reference","previous_headings":"","what":"Consolidate datacube into a single dataset — consolidate","title":"Consolidate datacube into a single dataset — consolidate","text":"function consolidates set datasets 'many*' package datacube single dataset combination rows, columns, observations datasets datacube.","code":""},{"path":"https://globalgov.github.io/manydata/reference/consolidate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consolidate datacube into a single dataset — consolidate","text":"","code":"consolidate(   datacube,   join = c(\"full\", \"inner\", \"left\"),   resolve = \"coalesce\",   key = NULL )"},{"path":"https://globalgov.github.io/manydata/reference/consolidate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consolidate datacube into a single dataset — consolidate","text":"datacube datacube one many packages join join procedure use. default \"full\" observations retained, options include \"left\" basing consolidated dataset observations present first dataset (reorder datasets favour another dataset), \"inner\" consolidated dataset includes observations present datasets. resolve Choice (potentially conflicting) values shared variables resolved. Options include: \"coalesce\" (default): uses first non-NA value (available) observation, essentially favouring order datasets datacube. \"unite\": combines unique values observation across datasets set (separated commas surrounded braces), can useful retaining information. \"random\": selects values random among observations dataset observed variable, particular use exploring implications dataset-related variation. \"precise\": selects value highest precision among observations dataset (see resolving_precision()), favours precise data. \"min\", \"max\": options return minimum maximum values respectively, can useful conservative temporal fixing. resolve variables different functions, pass argument vector (e.g. resolve = c(var1 = \"min\", var2 = \"max\")). Unnamed variables resolved according default (\"coalesce\"). key ID column collapse . default \"manyID\". Users can also specify multiple key variables list. multiple key variables, key variables must present datasets datacube (e.g. key = c(\"key1\", \"key2\")). equivalent key columns different names across datasets, matching possible keys declared (e.g. key = c(\"key1\" = \"key2\")). Missing observations key variable removed.","code":""},{"path":"https://globalgov.github.io/manydata/reference/consolidate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consolidate datacube into a single dataset — consolidate","text":"single tibble/data frame.","code":""},{"path":"https://globalgov.github.io/manydata/reference/consolidate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Consolidate datacube into a single dataset — consolidate","text":"function includes separate arguments rows columns, well resolve conflicts observations across datasets. provides users considerable flexibility combine data. example, users may wish stick units appear every dataset include variables coded dataset, units appear dataset variables appear every dataset. Even may conflicts, actual unit-variable observations may differ dataset dataset. offer number resolve methods enable users choose conflicts observations resolved. Text variables dropped efficient consolidation.","code":""},{"path":"https://globalgov.github.io/manydata/reference/consolidate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Consolidate datacube into a single dataset — consolidate","text":"","code":"# \\donttest{ consolidate(emperors, join = \"full\", resolve = \"coalesce\", key = \"ID\") #> Using `ID` for matching observations across datasets... #> ✔ Matched 151 observations by `ID` variable in `emperors` datasets. #> Using `ID` for matching observations across datasets... #> Joining 3 datasets using a full join... #> ✔ Joined 3 datasets using a full join. #> Joining 3 datasets using a full join... #> Found 12 conflicts to resolve by `coalesce()`... #> ✔ Resolved 3 related variables into `Begin`. #> Found 12 conflicts to resolve by `coalesce()`... #> ✔ Resolved 3 related variables into `End`. #> Found 12 conflicts to resolve by `coalesce()`... #> ✔ Resolved 2 related variables into `FullName`. #> Found 12 conflicts to resolve by `coalesce()`... #> ✔ Resolved 2 related variables into `Birth`. #> Found 12 conflicts to resolve by `coalesce()`... #> ✔ Resolved 2 related variables into `Death`. #> Found 12 conflicts to resolve by `coalesce()`... #> ✔ Resolved 2 related variables into `Dynasty`. #> Found 12 conflicts to resolve by `coalesce()`... #> # A tibble: 103 × 14 #>    ID       Begin End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause #>    <chr>    <mda> <mda> <chr>    <mda> <mda> <chr>     <chr>         <chr> <chr> #>  1 Aemilian 0253… 0253… Caesar … 0207… 0253… NA        Africa        Appo… Assa… #>  2 Allectus 0293… 0297… ?        NA  … 0297… NA        NA            NA    NA    #>  3 Anastas… 0491… 0518… Flavius… 0430… 0518… NA        NA            NA    NA    #>  4 Anthemi… 0467… 0472… Procopi… 0420… 0472… NA        NA            NA    NA    #>  5 Antonin… 0138… 0161… Caesar … 0086… 0161… Lanuvium  Italia        Birt… Natu… #>  6 Arcadius 0395… 0408… Flavius… 0377… 0408… NA        NA            NA    NA    #>  7 Augustus -002… 0014… Imperat… -006… 0014… Rome      Italia        Birt… Assa… #>  8 Aurelian 0270… 0275… Caesar … 0214… 0275… Sirmium   Pannonia      Appo… Assa… #>  9 Avitus   0455… 0456… Marcus … 0395… 0456… NA        NA            NA    NA    #> 10 Balbinus 0238… 0238… Caesar … 0178… 0238… NA        Unknown       Appo… Assa… #> # ℹ 93 more rows #> # ℹ 4 more variables: Killer <chr>, Dynasty <chr>, Era <chr>, Notes <chr> consolidate(emperors, join = \"inner\", resolve = \"min\", key = \"ID\") #> Using `ID` for matching observations across datasets... #> ✔ Matched 151 observations by `ID` variable in `emperors` datasets. #> Using `ID` for matching observations across datasets... #> Joining 3 datasets using a inner join... #> ✔ Joined 3 datasets using a inner join. #> Joining 3 datasets using a inner join... #> Found 12 conflicts to resolve by `min()`... #> ✔ Resolved 3 related variables into `Begin`. #> Found 12 conflicts to resolve by `min()`... #> ✔ Resolved 3 related variables into `End`. #> Found 12 conflicts to resolve by `min()`... #> ✔ Resolved 2 related variables into `FullName`. #> Found 12 conflicts to resolve by `min()`... #> Warning: There were 4 warnings in `mutate()`. #> The first warning was: #> ℹ In argument: `Birth = get(funny)(out, all_of(vars))`. #> Caused by warning in `min()`: #> ! no non-missing arguments, returning NA #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 3 remaining warnings. #> ✔ Resolved 2 related variables into `Birth`. #> Found 12 conflicts to resolve by `min()`... #> ✔ Resolved 2 related variables into `Death`. #> Found 12 conflicts to resolve by `min()`... #> ✔ Resolved 2 related variables into `Dynasty`. #> Found 12 conflicts to resolve by `min()`... #> # A tibble: 65 × 14 #>    ID       Begin End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause #>    <chr>    <mda> <mda> <chr>    <mda> <mda> <chr>     <chr>         <chr> <chr> #>  1 Augustus -002… -0014 Gaius J… -006… 0014  Rome      Italia        Birt… Assa… #>  2 Tiberius 0014… 0037  Tiberiu… -004… 0037  Rome      Italia        Birt… Assa… #>  3 Caligula 0037… 0041  Gaius C… 0012… 0014  Antitum   Italia        Birt… Assa… #>  4 Claudius 0041… 0054  Tiberiu… -000… 0041  Lugdunum  Gallia Lugdu… Birt… Assa… #>  5 Nero     0054… 0068  Claudiu… 0037… 0068  Antitum   Italia        Birt… Suic… #>  6 Galba    0068… 0069  Servius… -000… 0069  Terracina Italia        Seiz… Assa… #>  7 Otho     0069… 0069  Marcus … 0032… 0069  Terentin… Italia        Appo… Suic… #>  8 Vitelli… 0069… 0069  Aulus V… 0015… 0069  Rome      Italia        Seiz… Assa… #>  9 Vespasi… 0069… 0079  Titus F… 0009… 0079  Falacrine Italia        Seiz… Natu… #> 10 Titus    0079… 0081  Titus F… 0039… 0079  Rome      Italia        Birt… Natu… #> # ℹ 55 more rows #> # ℹ 4 more variables: Killer <chr>, Dynasty <chr>, Era <chr>, Notes <chr> consolidate(emperors, join = \"left\", resolve = \"max\", key = \"ID\") #> Using `ID` for matching observations across datasets... #> ✔ Matched 151 observations by `ID` variable in `emperors` datasets. #> Using `ID` for matching observations across datasets... #> Joining 3 datasets using a left join... #> ✔ Joined 3 datasets using a left join. #> Joining 3 datasets using a left join... #> Found 12 conflicts to resolve by `max()`... #> ✔ Resolved 3 related variables into `Begin`. #> Found 12 conflicts to resolve by `max()`... #> ✔ Resolved 3 related variables into `End`. #> Found 12 conflicts to resolve by `max()`... #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `FullName = get(funny)(out, all_of(vars))`. #> Caused by warning in `max()`: #> ! no non-missing arguments, returning NA #> ✔ Resolved 2 related variables into `FullName`. #> Found 12 conflicts to resolve by `max()`... #> Warning: There were 6 warnings in `mutate()`. #> The first warning was: #> ℹ In argument: `Birth = get(funny)(out, all_of(vars))`. #> Caused by warning in `max()`: #> ! no non-missing arguments, returning NA #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 5 remaining warnings. #> ✔ Resolved 2 related variables into `Birth`. #> Found 12 conflicts to resolve by `max()`... #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `Death = get(funny)(out, all_of(vars))`. #> Caused by warning in `max()`: #> ! no non-missing arguments, returning NA #> ✔ Resolved 2 related variables into `Death`. #> Found 12 conflicts to resolve by `max()`... #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `Dynasty = get(funny)(out, all_of(vars))`. #> Caused by warning in `max()`: #> ! no non-missing arguments, returning NA #> ✔ Resolved 2 related variables into `Dynasty`. #> Found 12 conflicts to resolve by `max()`... #> # A tibble: 69 × 14 #>    ID       Begin End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause #>    <chr>    <mda> <mda> <chr>    <mda> <mda> <chr>     <chr>         <chr> <chr> #>  1 Augustus -003… 0014… Imperat… -006… 0014… Rome      Italia        Birt… Assa… #>  2 Tiberius 0014… 0037… Tiberiv… -004… 0037… Rome      Italia        Birt… Assa… #>  3 Caligula 0037… 0041… Gaivs I… 0012… 0041… Antitum   Italia        Birt… Assa… #>  4 Claudius 0041… 0054… Tiberiv… -001… 0054… Lugdunum  Gallia Lugdu… Birt… Assa… #>  5 Nero     0054… 0068… Nero Cl… 0037… 0068… Antitum   Italia        Birt… Suic… #>  6 Galba    0068… 0069… Servivs… -000… 0069… Terracina Italia        Seiz… Assa… #>  7 Otho     0069… 0069… Marcvs … 0032… 0069… Terentin… Italia        Appo… Suic… #>  8 Vitelli… 0069… 0069… Avlvs V… 0015… 0069… Rome      Italia        Seiz… Assa… #>  9 Vespasi… 0069… 0079… Titvs F… 0009… 0079… Falacrine Italia        Seiz… Natu… #> 10 Titus    0079… 0081… Titvs F… 0039… 0081… Rome      Italia        Birt… Natu… #> # ℹ 59 more rows #> # ℹ 4 more variables: Killer <chr>, Dynasty <chr>, Era <chr>, Notes <chr> # }"},{"path":"https://globalgov.github.io/manydata/reference/defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions that have been renamed, superseded, or are no longer working — defunct","title":"Functions that have been renamed, superseded, or are no longer working — defunct","text":"Generally functions superseded renamed. Upon using , message provided directing user new function. However, stage package development, generally clear older defunct functions minor release, strongly encouraged use new functions/names/syntax wherever possible update scripts accordingly.","code":""},{"path":"https://globalgov.github.io/manydata/reference/defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions that have been renamed, superseded, or are no longer working — defunct","text":"","code":"coalesce_compatible(.data)  network_map(.data)  db_plot(.data)  db_comp(.data)  retrieve_bilaterals(.data)  retrieve_multilaterals(.data)  retrieve_links(.data)  retrieve_membership_list(.data)  data_source(.data)  get_packages(.data)  open_codebook(.data)  data_contrast(.data)  data_evolution(.data)  plot_releases(.data)"},{"path":"https://globalgov.github.io/manydata/reference/defunct.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Functions that have been renamed, superseded, or are no longer working — defunct","text":"coalesce_compatible(): Deprecated 2022-10-18. network_map(): Removed 2023-06-15. db_plot(): Removed 2023-06-19. db_comp(): Removed 2023-06-19. retrieve_bilaterals(): Removed 2023-06-19. retrieve_multilaterals(): Removed 2023-06-19. retrieve_links(): Removed 2023-06-19. retrieve_membership_list(): Removed 2023-06-19. data_source(): Removed 2023-06-19. get_packages(): Removed 2023-06-19. open_codebook(): Removed 2023-06-19. data_contrast(): Removed 2023-06-19. data_evolution(): Removed 2023-06-19. plot_releases(): Renamed 2023-07-03.","code":""},{"path":"https://globalgov.github.io/manydata/reference/describe.html","id":null,"dir":"Reference","previous_headings":"","what":"Data reports for datacubes and datasets with 'mdate' variables — describe","title":"Data reports for datacubes and datasets with 'mdate' variables — describe","text":"functions provide meta level descriptions datacubes datasets. mreport() creates properly formatted data report datasets contain 'mdate' class objects, alongside object classes. describe_datacube() prints text description datasets datacube.","code":""},{"path":"https://globalgov.github.io/manydata/reference/describe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data reports for datacubes and datasets with 'mdate' variables — describe","text":"","code":"mreport(data)  describe_datacube(datacube)"},{"path":"https://globalgov.github.io/manydata/reference/describe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data reports for datacubes and datasets with 'mdate' variables — describe","text":"data {tibble} {data.frame}. datacube datacube","code":""},{"path":"https://globalgov.github.io/manydata/reference/describe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data reports for datacubes and datasets with 'mdate' variables — describe","text":"data report class 'mreport'.","code":""},{"path":"https://globalgov.github.io/manydata/reference/describe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data reports for datacubes and datasets with 'mdate' variables — describe","text":"'mreport' displays variable's name, variable type, number observations per variable, number missing observations variable, percentage missing observations variable.","code":""},{"path":"https://globalgov.github.io/manydata/reference/describe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data reports for datacubes and datasets with 'mdate' variables — describe","text":"","code":"mreport(emperors) #> $Wikipedia #> -------------------------------------------------------- #> |  Variable   |  Class  |  Obs  |  Missing  |  Miss %  | #> -------------------------------------------------------- #> |ID           |character|     69|          0|         0| #> |Begin        |mdate    |     69|          0|         0| #> |End          |mdate    |     69|          0|         0| #> |FullName     |character|     68|          1|      1.45| #> |Birth        |mdate    |     63|          6|       8.7| #> |Death        |mdate    |     68|          1|      1.45| #> |CityBirth    |character|     51|         18|     26.09| #> |ProvinceBirth|character|     68|          1|      1.45| #> |Rise         |character|     68|          1|      1.45| #> |Cause        |character|     68|          1|      1.45| #> |Killer       |character|     68|          1|      1.45| #> |Dynasty      |character|     68|          1|      1.45| #> |Era          |character|     68|          1|      1.45| #> |Notes        |character|     46|         23|     33.33| #> -------------------------------------------------------- #>  #>  #> $UNRV #> ------------------------------------------------------- #> |  Variable  |  Class  |  Obs  |  Missing  |  Miss %  | #> ------------------------------------------------------- #> |ID          |character|     98|          0|         0| #> |Begin       |mdate    |     98|          0|         0| #> |End         |mdate    |     98|          0|         0| #> |Birth       |mdate    |     74|         24|     24.49| #> |Death       |mdate    |     98|          0|         0| #> |FullName    |character|     93|          5|       5.1| #> |Dynasty     |character|     61|         37|     37.76| #> ------------------------------------------------------- #>  #>  #> $Britannica #> ------------------------------------------------------- #> |  Variable  |  Class  |  Obs  |  Missing  |  Miss %  | #> ------------------------------------------------------- #> |ID          |character|     87|          0|         0| #> |Begin       |mdate    |     87|          0|         0| #> |End         |mdate    |     87|          0|         0| #> ------------------------------------------------------- #>  #>"},{"path":"https://globalgov.github.io/manydata/reference/emperors.html","id":null,"dir":"Reference","previous_headings":"","what":"Emperors datacube documentation — emperors","title":"Emperors datacube documentation — emperors","text":"emperors datacube list containing 3 datasets: Wikipedia, UNRV, Britannica","code":""},{"path":"https://globalgov.github.io/manydata/reference/emperors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emperors datacube documentation — emperors","text":"","code":"emperors"},{"path":"https://globalgov.github.io/manydata/reference/emperors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Emperors datacube documentation — emperors","text":"Wikipedia: dataset 68 observations following 15 variables: ID, Begin, End, FullName, Birth, Death, CityBirth, ProvinceBirth, Rise, Cause, Killer, Dynasty, Era, Notes, Verif. UNRV: dataset 99 observations following 7 variables: ID, Begin, End, Birth, Death, FullName, Dynasty. Britannica: dataset 87 observations following 3 variables: ID, Begin, End.","code":""},{"path":"https://globalgov.github.io/manydata/reference/emperors.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Emperors datacube documentation — emperors","text":"Wikipedia, 'List_of_Roman_emperors',  https://en.wikipedia.org/wiki/List_of_Roman_emperors, Accessed 2021-07-22. United Nations Roma Victrix, 'Roman Emperor list', https://www.unrv.com/government/emperor.php, Accessed 2021-07-22. Britannica, 'List Roman emperors', https://www.britannica.com/topic/list--Roman-emperors-2043294, Accessed 2021-07-22.","code":""},{"path":"https://globalgov.github.io/manydata/reference/emperors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Emperors datacube documentation — emperors","text":"","code":"#> $Wikipedia #> -------------------------------------------------------- #> |  Variable   |  Class  |  Obs  |  Missing  |  Miss %  | #> -------------------------------------------------------- #> |ID           |character|     69|          0|         0| #> |Begin        |mdate    |     69|          0|         0| #> |End          |mdate    |     69|          0|         0| #> |FullName     |character|     68|          1|      1.45| #> |Birth        |mdate    |     63|          6|       8.7| #> |Death        |mdate    |     68|          1|      1.45| #> |CityBirth    |character|     51|         18|     26.09| #> |ProvinceBirth|character|     68|          1|      1.45| #> |Rise         |character|     68|          1|      1.45| #> |Cause        |character|     68|          1|      1.45| #> |Killer       |character|     68|          1|      1.45| #> |Dynasty      |character|     68|          1|      1.45| #> |Era          |character|     68|          1|      1.45| #> |Notes        |character|     46|         23|     33.33| #> -------------------------------------------------------- #> #> #> $UNRV #> ------------------------------------------------------- #> |  Variable  |  Class  |  Obs  |  Missing  |  Miss %  | #> ------------------------------------------------------- #> |ID          |character|     98|          0|         0| #> |Begin       |mdate    |     98|          0|         0| #> |End         |mdate    |     98|          0|         0| #> |Birth       |mdate    |     74|         24|     24.49| #> |Death       |mdate    |     98|          0|         0| #> |FullName    |character|     93|          5|       5.1| #> |Dynasty     |character|     61|         37|     37.76| #> ------------------------------------------------------- #> #> #> $Britannica #> ------------------------------------------------------- #> |  Variable  |  Class  |  Obs  |  Missing  |  Miss %  | #> ------------------------------------------------------- #> |ID          |character|     87|          0|         0| #> |Begin       |mdate    |     87|          0|         0| #> |End         |mdate    |     87|          0|         0| #> -------------------------------------------------------"},{"path":"https://globalgov.github.io/manydata/reference/emperors.html","id":"url","dir":"Reference","previous_headings":"","what":"URL","title":"Emperors datacube documentation — emperors","text":"Wikipedia: https://en.wikipedia.org/wiki/List_of_Roman_emperors UNRV: https://www.unrv.com/government/emperor.php Britannica: https://www.britannica.com/place/list--Roman-emperors-2043294","code":""},{"path":"https://globalgov.github.io/manydata/reference/emperors.html","id":"mapping","dir":"Reference","previous_headings":"","what":"Mapping","title":"Emperors datacube documentation — emperors","text":"wikipedia: Variable Mapping UNRV: Variable Mapping britannica: Variable Mapping","code":""},{"path":"https://globalgov.github.io/manydata/reference/pluck.html","id":null,"dir":"Reference","previous_headings":"","what":"Selects a single dataset from a datacube — pluck","title":"Selects a single dataset from a datacube — pluck","text":"function reexported/wrapped {purrr} package. allows users select single dataset one datacubes available across 'many* packages'. additionally invites users cite selected dataset.","code":""},{"path":"https://globalgov.github.io/manydata/reference/pluck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selects a single dataset from a datacube — pluck","text":"","code":"pluck(.x, ..., .default = NULL)"},{"path":"https://globalgov.github.io/manydata/reference/pluck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selects a single dataset from a datacube — pluck","text":".x datacube ... name dataset datacube .default Value use target NULL absent.","code":""},{"path":"https://globalgov.github.io/manydata/reference/pluck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selects a single dataset from a datacube — pluck","text":"selected dataset","code":""},{"path":"https://globalgov.github.io/manydata/reference/pluck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selects a single dataset from a datacube — pluck","text":"","code":"# \\donttest{ pluck(emperors, \"UNRV\") #> Please cite the dataset:  #> • United Nations of Roma Victrix, 'Roman Emperor list', https://www.unrv.com/government/emperor.php, Accessed on 2021-07-22. #> # A tibble: 98 × 7 #>    ID        Begin   End     Birth   Death   FullName                    Dynasty #>    <chr>     <mdate> <mdate> <mdate> <mdate> <chr>                       <chr>   #>  1 Augustus  -0027   -0014   -0063   0014    Gaius Julius Caesar Octavi… Julio-… #>  2 Tiberius  0014    0037    -0042   0037    Tiberius Claudius Nero Cae… Julio-… #>  3 Caligula  0037    0041    0012    0014    Gaius Caesar Germanicus / … Julio-… #>  4 Claudius  0041    0054    -0010   0041    Tiberius Claudius Nero Ger… Julio-… #>  5 Nero      0054    0068    0037    0068    Claudius Nero Caesar (born… Julio-… #>  6 Galba     0068    0069    -0003   0069    Servius Sulpicius Galba / … Year o… #>  7 Otho      0069    0069    0032    0069    Marcus Salvius Otho / Impe… Year o… #>  8 Vitellius 0069    0069    0015    0069    Aulus Vitellius / Aulus Vi… Year o… #>  9 Vespasian 0069    0079    0009    0079    Titus Flavius Vespasianus … Year o… #> 10 Titus     0079    0081    0039    0079    Titus Flavius Vespasianus … Flavian #> # ℹ 88 more rows # }"},{"path":"https://globalgov.github.io/manydata/reference/recollect.html","id":null,"dir":"Reference","previous_headings":"","what":"Pastes unique string vectors — recollect","title":"Pastes unique string vectors — recollect","text":"use dplyr::summarise, example","code":""},{"path":"https://globalgov.github.io/manydata/reference/recollect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pastes unique string vectors — recollect","text":"","code":"recollect(x, collapse = \"_\")"},{"path":"https://globalgov.github.io/manydata/reference/recollect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pastes unique string vectors — recollect","text":"x vector collapse String indicating elements separated","code":""},{"path":"https://globalgov.github.io/manydata/reference/recollect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pastes unique string vectors — recollect","text":"single value","code":""},{"path":"https://globalgov.github.io/manydata/reference/recollect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pastes unique string vectors — recollect","text":"function operates similarly reunite, instead operating columns/observations, pastes together unique rows/observations.","code":""},{"path":"https://globalgov.github.io/manydata/reference/recollect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pastes unique string vectors — recollect","text":"","code":"# \\donttest{ data <- data.frame(ID = c(1,2,3,3,2,1)) data1 <- data.frame(ID = c(1,2,3,3,2,1), One = c(1,NA,3,NA,2,NA)) recollect(data$ID) #> [1] \"1_2_3\" recollect(data1$One) #> [1] \"1_3_2\" # }"},{"path":"https://globalgov.github.io/manydata/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%","code":""},{"path":"https://globalgov.github.io/manydata/reference/repaint.html","id":null,"dir":"Reference","previous_headings":"","what":"Fills missing data by lookup — repaint","title":"Fills missing data by lookup — repaint","text":"Fills missing data known observations id/index","code":""},{"path":"https://globalgov.github.io/manydata/reference/repaint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fills missing data by lookup — repaint","text":"","code":"repaint(df, id, var)"},{"path":"https://globalgov.github.io/manydata/reference/repaint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fills missing data by lookup — repaint","text":"df dataframe id string identifying column dataframe indexing var string identifying column columns dataframe filled","code":""},{"path":"https://globalgov.github.io/manydata/reference/repaint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fills missing data by lookup — repaint","text":"dataframe","code":""},{"path":"https://globalgov.github.io/manydata/reference/repaint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fills missing data by lookup — repaint","text":"","code":"# \\donttest{ data <- data.frame(ID = c(1,2,3,3,2,1),                     One = c(1,NA,3,NA,2,NA),                     Two = c(NA,\"B\",NA,\"C\",NA,\"A\")) repaint(data, \"ID\", c(\"One\",\"Two\")) #>   ID One Two #> 1  1   1   A #> 2  2   2   B #> 3  3   3   C #> 4  3   3   C #> 5  2   2   B #> 6  1   1   A # }"},{"path":"https://globalgov.github.io/manydata/reference/resolving.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolving multiple observations of the same variable into one — resolving","title":"Resolving multiple observations of the same variable into one — resolving","text":"family functions provides row-wise summarization data frames tibbles, returning single value per row based specified columns. useful tasks like extracting typical summary values multiple variables, simplifying wide data structures, imputing representative values.","code":""},{"path":"https://globalgov.github.io/manydata/reference/resolving.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolving multiple observations of the same variable into one — resolving","text":"","code":"resolve_unite(.data, vars, na.rm = TRUE)  resolve_coalesce(.data, vars)  resolve_min(.data, vars, na.rm = TRUE)  resolve_max(.data, vars, na.rm = TRUE)  resolve_random(.data, vars, na.rm = TRUE)  resolve_precision(.data, vars)  resolve_mean(.data, vars, na.rm = TRUE)  resolve_mode(.data, vars, na.rm = TRUE)  resolve_median(.data, vars, na.rm = TRUE)  resolve_consensus(.data, vars, na.rm = TRUE)"},{"path":"https://globalgov.github.io/manydata/reference/resolving.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolving multiple observations of the same variable into one — resolving","text":".data data frame tibble containing variables. vars vector variables .data resolved converged. argument left unspecified, variables merged together. na.rm Logical whether missing values (NAs) removed operation function. Note unlike na.rm argument operates functions base R, e.g. max(), default TRUE.","code":""},{"path":"https://globalgov.github.io/manydata/reference/resolving.html","id":"unite","dir":"Reference","previous_headings":"","what":"Unite","title":"Resolving multiple observations of the same variable into one — resolving","text":"Uniting returns unique values set, separated commas contained within braces. Note uniting always returns character/string vector, enables accommodate different classes variables. order values reflects first appearance; , ordered increasing value.","code":""},{"path":"https://globalgov.github.io/manydata/reference/resolving.html","id":"coalesce","dir":"Reference","previous_headings":"","what":"Coalesce","title":"Resolving multiple observations of the same variable into one — resolving","text":"Coalescing returns vector first non-missing values found reading variables left right. , missing values first vector may filled observations second vector, later vectors second vector also misses observation cell. Variables can reordered manually.","code":""},{"path":"https://globalgov.github.io/manydata/reference/resolving.html","id":"min-and-max","dir":"Reference","previous_headings":"","what":"Min and Max","title":"Resolving multiple observations of the same variable into one — resolving","text":"functions return vector containing row's minimum maximum value. Note functions work numeric date vectors, also character string vectors. character data, functions return shortest longest strings, respectively, row.","code":""},{"path":"https://globalgov.github.io/manydata/reference/resolving.html","id":"random","dir":"Reference","previous_headings":"","what":"Random","title":"Resolving multiple observations of the same variable into one — resolving","text":"function returns vector values selected randomly among values contained row. Note default na.rm = TRUE, means missing data selected random default, can also change probability distribution row. na.rm = FALSE, probability value selected uniform.","code":""},{"path":"https://globalgov.github.io/manydata/reference/resolving.html","id":"precision","dir":"Reference","previous_headings":"","what":"Precision","title":"Resolving multiple observations of the same variable into one — resolving","text":"function returns vector maximises precision values row. numeric vectors, precision expressed significant digits, 1.01 precise 1. character vectors, precision expressed terms character length proportional max character length row. applies also messydates, meaning precision expressed lowest level date component specified, 2008-10 precise 2008, 2008-10-10 precise still.","code":""},{"path":"https://globalgov.github.io/manydata/reference/resolving.html","id":"mean-and-median","dir":"Reference","previous_headings":"","what":"Mean and median","title":"Resolving multiple observations of the same variable into one — resolving","text":"functions return vector means medians, respectively, values row.","code":""},{"path":"https://globalgov.github.io/manydata/reference/resolving.html","id":"consensus","dir":"Reference","previous_headings":"","what":"Consensus","title":"Resolving multiple observations of the same variable into one — resolving","text":"function returns vector consensus values, .e. variation values row. values (excluding missing values default) equivalent, NA returned row.","code":""},{"path":"https://globalgov.github.io/manydata/reference/resolving.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolving multiple observations of the same variable into one — resolving","text":"","code":"test <- data.frame(preferred_dataset = c(1,6,NA),                     more_comprehensive = c(1,3,3),                     precise_where_available = c(NA,3.3,4.1)) test #>   preferred_dataset more_comprehensive precise_where_available #> 1                 1                  1                      NA #> 2                 6                  3                     3.3 #> 3                NA                  3                     4.1 resolve_unite(test) #> [1] \"{1}\"       \"{6,3,3.3}\" \"{3,4.1}\"   resolve_coalesce(test) #> [1] 1 6 3 resolve_min(test) #> [1] 1 3 3 resolve_max(test) #> [1] 1.0 6.0 4.1 resolve_random(test) #> [1] 1.0 3.3 4.1 resolve_precision(test) #> [1] 1.0 3.3 4.1 resolve_mean(test) #> [1] 1.00 4.10 3.55 resolve_mode(test) #> [1] 1 3 3 resolve_median(test) #> [1] 1.00 3.30 3.55 resolve_consensus(test) #> [1]  1 NA NA"},{"path":"https://globalgov.github.io/manydata/reference/reunite.html","id":null,"dir":"Reference","previous_headings":"","what":"Pastes unique string vectors — reunite","title":"Pastes unique string vectors — reunite","text":"vectorised function use dplyr's mutate, etc","code":""},{"path":"https://globalgov.github.io/manydata/reference/reunite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pastes unique string vectors — reunite","text":"","code":"reunite(..., sep = \"_\")"},{"path":"https://globalgov.github.io/manydata/reference/reunite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pastes unique string vectors — reunite","text":"... Variables pass function, currently two time sep Separator vectors reunited, default \"_\"","code":""},{"path":"https://globalgov.github.io/manydata/reference/reunite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pastes unique string vectors — reunite","text":"single vector unique non-missing information","code":""},{"path":"https://globalgov.github.io/manydata/reference/reunite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pastes unique string vectors — reunite","text":"","code":"# \\donttest{ data <- data.frame(fir=c(NA, \"two\", \"three\", NA),                    sec=c(\"one\", NA, \"three\", NA), stringsAsFactors = FALSE) transmutate(data, single = reunite(fir, sec)) #>   single #> 1    one #> 2    two #> 3  three #> 4   <NA> # }"},{"path":"https://globalgov.github.io/manydata/reference/transmutate.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop only columns used in formula — transmutate","title":"Drop only columns used in formula — transmutate","text":"function dplyr's transmute mutate","code":""},{"path":"https://globalgov.github.io/manydata/reference/transmutate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop only columns used in formula — transmutate","text":"","code":"transmutate(.data, ...)"},{"path":"https://globalgov.github.io/manydata/reference/transmutate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Drop only columns used in formula — transmutate","text":"https://stackoverflow.com/questions/51428156/dplyr-mutate-transmute-drop---columns-used---formula","code":""},{"path":"https://globalgov.github.io/manydata/reference/transmutate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop only columns used in formula — transmutate","text":".data Data frame pass function ... Variables pass function","code":""},{"path":"https://globalgov.github.io/manydata/reference/transmutate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop only columns used in formula — transmutate","text":"Data frame mutated variables none variables used mutations, , unlike dplyr::transmute(), unnamed variables.","code":""},{"path":"https://globalgov.github.io/manydata/reference/transmutate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop only columns used in formula — transmutate","text":"","code":"# \\donttest{ pluck(emperors, \"Wikipedia\") #> Please cite the dataset:  #> • Wikipedia, 'List_of_Roman_emperors',  https://en.wikipedia.org/wiki/List_of_Roman_emperors, Accessed on 2021-07-22. #> # A tibble: 69 × 14 #>    ID       Begin End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause #>    <chr>    <mda> <mda> <chr>    <mda> <mda> <chr>     <chr>         <chr> <chr> #>  1 Augustus -002… 0014… Imperat… -006… 0014… Rome      Italia        Birt… Assa… #>  2 Tiberius 0014… 0037… Tiberiv… -004… 0037… Rome      Italia        Birt… Assa… #>  3 Caligula 0037… 0041… Gaivs I… 0012… 0041… Antitum   Italia        Birt… Assa… #>  4 Claudius 0041… 0054… Tiberiv… -000… 0054… Lugdunum  Gallia Lugdu… Birt… Assa… #>  5 Nero     0054… 0068… Nero Cl… 0037… 0068… Antitum   Italia        Birt… Suic… #>  6 Galba    0068… 0069… Servivs… -000… 0069… Terracina Italia        Seiz… Assa… #>  7 Otho     0069… 0069… Marcvs … 0032… 0069… Terentin… Italia        Appo… Suic… #>  8 Vitelli… 0069… 0069… Avlvs V… 0015… 0069… Rome      Italia        Seiz… Assa… #>  9 Vespasi… 0069… 0079… Titvs F… 0009… 0079… Falacrine Italia        Seiz… Natu… #> 10 Titus    0079… 0081… Titvs F… 0039… 0081… Rome      Italia        Birt… Natu… #> # ℹ 59 more rows #> # ℹ 4 more variables: Killer <chr>, Dynasty <chr>, Era <chr>, Notes <chr> transmutate(emperors$Wikipedia, Beginning = Begin) #> # A tibble: 69 × 14 #>    ID      End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause Killer #>    <chr>   <mda> <chr>    <mda> <mda> <chr>     <chr>         <chr> <chr> <chr>  #>  1 August… 0014… Imperat… -006… 0014… Rome      Italia        Birt… Assa… Wife   #>  2 Tiberi… 0037… Tiberiv… -004… 0037… Rome      Italia        Birt… Assa… Other… #>  3 Caligu… 0041… Gaivs I… 0012… 0041… Antitum   Italia        Birt… Assa… Senate #>  4 Claudi… 0054… Tiberiv… -000… 0054… Lugdunum  Gallia Lugdu… Birt… Assa… Wife   #>  5 Nero    0068… Nero Cl… 0037… 0068… Antitum   Italia        Birt… Suic… Senate #>  6 Galba   0069… Servivs… -000… 0069… Terracina Italia        Seiz… Assa… Other… #>  7 Otho    0069… Marcvs … 0032… 0069… Terentin… Italia        Appo… Suic… Other… #>  8 Vitell… 0069… Avlvs V… 0015… 0069… Rome      Italia        Seiz… Assa… Other… #>  9 Vespas… 0079… Titvs F… 0009… 0079… Falacrine Italia        Seiz… Natu… Disea… #> 10 Titus   0081… Titvs F… 0039… 0081… Rome      Italia        Birt… Natu… Disea… #> # ℹ 59 more rows #> # ℹ 4 more variables: Dynasty <chr>, Era <chr>, Notes <chr>, Beginning <mdate> # }"},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-102","dir":"Changelog","previous_headings":"","what":"manydata 1.0.2","title":"manydata 1.0.2","text":"CRAN release: 2025-06-03","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-1-0-2","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 1.0.2","text":"Fixed global variables several resolve_*() functions","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-101","dir":"Changelog","previous_headings":"","what":"manydata 1.0.1","title":"manydata 1.0.1","text":"CRAN release: 2025-03-21","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-1-0-1","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 1.0.1","text":"Updated website","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-1-0-1","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 1.0.1","text":"resolve_*() functions now parameter indicating whether missing values included; unlike base R, default missing values excluded Restored resolve_mean() Restored resolve_median() Added resolve_mode() retaining common values Added resolve_consensus() retaining values conflicts","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-1-0-0","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 1.0.0","text":"Updated GitHub checks release actions Fixes URLs Updated website Improved ease operation making cli, dplyr, messydates Depends Dropped usethis Suggest","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"collection-1-0-0","dir":"Changelog","previous_headings":"","what":"Collection","title":"manydata 1.0.0","text":"Using zero-padded messydates Added citation prompts emperors$Wikipedia emperors$UNRV emperors$Britannica Fixed non-unique IDs bugs Fixed inc","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"calling-1-0-0","dir":"Changelog","previous_headings":"","what":"Calling","title":"manydata 1.0.0","text":"Added call_citations() print citations added hidden information Fixed finicky call_sources() bug related calling help files Improved call_sources() call_citations() accept datacubes datasets, objects characters Added mreport.list() make easier report datacubes Added describe_data() describing key aspects datasets datacubes Fixed call_releases() use messydates::vmin()","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-1-0-0","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 1.0.0","text":"Function now wraps dplyr::pluck() adds citation prompt Improved useability cli progress messages success alerts duckplyr considered: faster, couldn’t handle mdate class collapse considered: even faster, inconsistent output “” becomes “inner” “” becomes “full” “favour” becomes “left” Fixed passed single dataset Prompts users cite datasets (closes #280) Fixed bug ‘resolve’ argument, named ‘resolve’ vector longer length variables Dropped ‘cols’ argument testthat tests use cli quiet mode Updated resolve_coalesce() coalescing (taking first non-NA value) Updated resolve_random() returning random values sampling available Updated resolve_min() resolve_max() returning min max values Added resolve_unite() returning possible values set Added precision.numeric() return significant figures Added precision.character() return characters Dropped resolve_median() resolve_mean() uncommon choices Dropped resolve_multiple() favour always using flexible loop Dropped favour() favour left joins coalesces Dropped coalesce_rows() longer necessary","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-093","dir":"Changelog","previous_headings":"","what":"manydata 0.9.3","title":"manydata 0.9.3","text":"CRAN release: 2024-05-06","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-9-3","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.9.3","text":"Updated call_sources() flexible gathering data datacube documentation Closed #279 updating documentation across many packages compatible call_sources() Updated compare_dimensions() fixing bugs related dates NA observations","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-092","dir":"Changelog","previous_headings":"","what":"manydata 0.9.2","title":"manydata 0.9.2","text":"CRAN release: 2024-02-22","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-9-2","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.9.2","text":"Fixed emperors data documentation issues related lost braces CRAN submission","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-9-1","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.9.1","text":"Updated test expectations make package compatible new release ggplot2","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-9-1","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.9.1","text":"Closed #266 adding startup messages ‘many’ packages Closed #267 adding links package websites console messages Closed #282 updating references ‘database’ ‘datacube’ Closed #293 fixing bugs related missing dates using consolidate() Closed #294 updating call_sources() identify datasets within datacubes","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-9-0","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.9.0","text":"Closed #259 revising CCC package structure updating package cheatsheet Updated documentation ‘emperors’ data new style improve visibility transparency Closed #264 removing tibbleand janitor package imports DESCRIPTION file Closed #276 reviewing package vignettes Closed #277 updating ‘manydata-defunct’ file Closed #284 removing vignette updating README include information use package Updated references argument ‘database’ ‘datacube’","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-9-0","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.9.0","text":"Closed #250, #251, #262 renaming get_packages() call_packages() updating function works look packages, version updates, availailabity Closed #269 # adding call_sources() function displays sources variable changes datasets datacubes Closed #271 updating retrieve_ family functions call_ functions Closed #283 renaming plot_releases() call_releases Closed #243 #257 creating compare_missing() function compare missing values datasets ‘many’ datacube Closed #249 #253 renaming db_plot() function compare_categories() updating variable categories Closed #261 renaming updating db_ functions compare_ functions Closed #268 adding compare_overlap() help users investigate overlap datasets within datacubes Closed #285 adding compare_dimensions() compare_ranges() compare dimensions ranges datacubes","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-083","dir":"Changelog","previous_headings":"","what":"manydata 0.8.3","title":"manydata 0.8.3","text":"CRAN release: 2023-06-15","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-8-3","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.8.3","text":"Made ´network_map()´ function defunct","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-082","dir":"Changelog","previous_headings":"","what":"manydata 0.8.2","title":"manydata 0.8.2","text":"CRAN release: 2022-11-19","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-8-2","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.8.2","text":"Updated consolidate() require two keys joining memberships’ databases Updated db_comp() follow consolidation defaults memberships’ databases Closed #231 adding retrieve_texts() function retrieve treaty texts ‘many’ packages","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-081","dir":"Changelog","previous_headings":"","what":"manydata 0.8.1","title":"manydata 0.8.1","text":"CRAN release: 2022-11-11","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-8-1","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.8.1","text":"Added ‘RDataTmp’ files Rbuildignore .gitignore Updated data_evolution() use inherits() instead class() condition comparison","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-8-0","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.8.0","text":"Closed #212 implementing package caching GitHub actions workflows Closed #218 fixing bug GitHub actions workflows Closed #225 changing structure datasets “many” data packages Closed #240 updating package cheatsheet","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-8-0","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.8.0","text":"Closed #134 adding data_evolution() function report family functions gets original datasets, available, opens preparation scripts, available Closed #214 adding db_plot() function plot profile database facilitate comparison matched observations across datasets Closed #224 adding db_comp() function creates tibble database facilitate comparison matched observations across datasets Closed #215 making get_packages() interactive users can chose branch download Closed #219 improving get_packages() printing Updated get_packages() plot_releases() use messydates, instead lubridate, dates coercion Closed #222 adding network_map() function plotting geographical networks Closed #227 making consolidate() ignore text related variables due size Closed #230 making consolidate() concise avoid running memory limits Closed #228 #232 replacing coalesce_compatible() faster approach coalescing compatible missing observations relies zoo::na.locf() Made coalesce_compatible() function defunct","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-075","dir":"Changelog","previous_headings":"","what":"manydata 0.7.5","title":"manydata 0.7.5","text":"CRAN release: 2022-06-07","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-7-5","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.7.5","text":"Removed skimr table emperors database documentation Updated path binaries push release GitHub actions","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-7-4","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.7.4","text":"Closed #187 updating GitHub actions implement package caching Closed #209 removing non-ASCII characters package Closed #210 removing pkgdown dependency Updated emperors data contain correct date class name consistent messydates","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-073","dir":"Changelog","previous_headings":"","what":"manydata 0.7.3","title":"manydata 0.7.3","text":"CRAN release: 2022-04-01","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-7-3","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.7.3","text":"Updated get_packages() function identifies installed packages avoid using installed.packages() Updated documentation coalesce_compatible() function include returns","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-072","dir":"Changelog","previous_headings":"","what":"manydata 0.7.2","title":"manydata 0.7.2","text":"Ignored CRAN-SUBMISSION resubmitted.","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-7-1","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.7.1","text":"Updated DESCRIPTION removing ambiguous word title Updated README correcting URL life cycle badge","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-7-1","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.7.1","text":"Updated helper functions consolidate() use inherits() identify variable’s class","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-7-0","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.7.0","text":"Closed #194 updating remaining references “qID” “manyID” Closed #196 updating elements configure website work properly Updated ’_pkgdown.yml’ file use bootstrap 5 template build website","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-7-0","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.7.0","text":"Closed #191 making consolidate() function concise faster removing redundant code lines Fixed dates-related warnings changing messydates package used resolve dates Updated consolidate() substitutes missing observations first non-missing observation datasets Closed #201 fixing consolidate() detects variables resolved avoid ambiguous variable matching Closed #202 allowing multiple key vectors declared arguments consolidate() Closed #199 adding favour() (also favor()) function re-orders datasets within database","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-6-0","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.6.0","text":"Closed #189 renaming package {qData} manydata Updated user vignette include examples working consolidate() Updated package website Closed #167 adding cheatsheet README","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-6-0","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.6.0","text":"Closed #169 making default key variable “many_ID” instead “qID” Added “max” resolve argument resolves conflicts favor largest non NA value Added “min” resolve argument resolves conflicts favor smallest non NA value Added “mean” resolve argument resolves conflicts favor average non NA value Added “median” resolve argument resolves conflicts favor median non NA value Added “random” resolve argument resolves conflicts favor random non NA value Closed #185 making users can specify resolve argument differently different variables Closed #188 adding informative warnings GitHub download limits get_packages() function Added extract_bilaterals() extracting adjacency edgelist bilateral agreements Added extract_multilaterals() extracting adjacency edgelist multilateral agreements","code":""}]
