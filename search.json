[{"path":[]},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement IHEID. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://globalgov.github.io/manydata/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Contributions manydata, whether form issue identification, bug fixes, new code documentation encouraged welcome, research assistants (early) users package: Submit issue Fix bug implement new features Document existing code outlines propose change package Global Governance Observatory’s ecosystem. Please note manydata project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing","text":"Please use issue tracker GitHub identify problems suggest new functionality, submitting changes code. use issues identify bugs tasks, discuss feature requests, track implementation changes. submitting issue, please provide least ‘Type’ label best describes issue . useful issues ones precisely identify bug, propose test pass instead fails.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"adding-new-code","dir":"","previous_headings":"","what":"Adding new code","title":"Contributing","text":"Independent assigned code contributions welcome. writing new code, please follow tidyverse style guide based standard R guidelines. can help use packages lintr goodpractice ensure followed. packages incorporated checks made pull request made. styler package fixes non-invasive way code adhere tidyverse formatting rules, also provides RStudio Addins help task. run lintr goodpractice checks use styler file run:","code":"# basic lintr checking lintr::lint_package(path = \"manydata/\")  # goodpractices checks. Exclude length 80 goodpractice::gp(path = \"manydata/\",    checks = all_checks()[-c(8)])  # styler fix some of the styling issues styler::style_file(\"filePath\")"},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing","text":"title PR briefly describe change. Please include summary changes issues fixed relevant motivation context. List dependencies required change, indicating whether major (breaking), minor, patch change. body PR contain Fixes #issue-number. checklist provided check cases different elements listed completed make sure steps respected. Make sure package passes R CMD check running devtools::check() commiting changes pull request. want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed openning pull request. ’ve found bug, please file issue illustrates bug minimal reprex. Please follow manydata pull request guideline (https://github.com/globalgov/manydata/blob/main/.github/pull_request_template.md)","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"branches","dir":"","previous_headings":"Pull request process","what":"Branches","title":"Contributing","text":"use two main branches project: origin/main branch reserved fully functional releases model. develop branch reaches stable point, code maintainer merges back master branch, tags release number . origin/develop branch reflects latest model development stage. Contributers encouraged submit minor changes branch enhance existing functionality. New features may break existing functionality committed supporting branches. use two types supporting branches: Feature branches used develop new functionality. exist long feature developed, either merged develop branch incorporation release, deleted feature abandoned. Feature branches branch origin/develop. Hotfix branches used provide fixes severe bugs main branch. way, code maintainer incorporate (potentially unstable) changes develop branch fix issue. Branch names prefixed hotfix-. branching model based : https://nvie.com/posts/-successful-git-branching-model/.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"main-branch-code-maintainer-only","dir":"","previous_headings":"Pull request process","what":"Main Branch (code maintainer only)","title":"Contributing","text":"create release version code: Ensure repository --date: git pull. Switch main branch: git checkout master. Merge changes develop branch: git merge ---ff develop. Tag release version: git tag -VX.Y.Z -m \"VERSION-NAME\". Push changes repository git push origin master --tags.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"develop-branch-minor-changes-to-existing-functionality","dir":"","previous_headings":"Pull request process","what":"Develop Branch (minor changes to existing functionality)","title":"Contributing","text":"make minor changes directly develop branch, follow standard git procedures: Make sure switched develop branch project: git checkout -b develop. Make sure local version code --date: git pull origin develop. Make changes Stage changes commit: git add PATH--CHANGED-FILE. Commit changes using appropriate message: git commit -m \"DESCRIPTION\". Push commit: git push origin develop.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"feature-branches-new-functionality","dir":"","previous_headings":"Pull request process","what":"Feature Branches (new functionality)","title":"Contributing","text":"create new feature branch: git checkout -b myfeature develop. merge feature branch back develop:","code":"git checkout develop git merge --no-ff myfeature git branch -d myfeature git push origin develop"},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"hotfix-branches-to-fix-critical-bugs-in-release-versions","dir":"","previous_headings":"Pull request process","what":"Hotfix Branches (to fix critical bugs in release versions)","title":"Contributing","text":"create new hotfix branch: git checkout -b hotfix-VERSION master. merge hotfix back master (code maintainer ): develop: Every hotfix increment PATCH digit version number: hotfix branch V1.3.0 named hotfix-V1.3.1, new release tagged V1.3.1. merged master develop, hotfix branch can deleted: git branch -d hotfix-VERSION.","code":"git checkout master git merge --no-ff hotfix-VERSION  git tag -a VERSION git push origin develop git checkout develop git merge --no-ff hotfix-VERSION"},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"commit-messages","dir":"","previous_headings":"Pull request process","what":"Commit messages","title":"Contributing","text":"Commits relate existing issues reference updated status issues, mention issue number (preceded hash symbol: #) commit description: Resolved #31 adding new function things, also updated documentation issue hash (.e. #31) preceded resolve, resolves, resolved, close, closes, closed, fix, fixes, fixed (capitalised ), status issue(s) mentioned updated automatically. current syntactical standard mention issue first provide short description committed changes relation issue. ancillary changes can mentioned comma. written single line, like : #{verb} {issue} {describe main action/changes}, {additional actions/changes}. Note important write structured commit message improve efficiency collaboration. Please make sure : * Making title clear concise correct reference issue described . * Using subject line description part commit message outlines many different changes. * Explaining details changes made made using bullet points. * Separating paragraph blank line.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"testing","dir":"","previous_headings":"Pull request process","what":"Testing","title":"Contributing","text":"use testthat package write unit tests. convention, tests located testthat/tests/. verify tests pass issuing commit existing code. run tests latest version manually: writing new function, consider writing unit test function. follow several conventions writing tests: unit test file test one aspects single function. makes easier identify source bugs, prevents lower-level tests failing higher-level functions change. naming convention test files : test-FILENAME_IN_R_DIRECTORY-FUNCTION_NAME.R, .e. test files named file containing original function R directory, pre-fixed “test”, optionally post-fixed name function tested. test requires auxiliary functions package, e.g. initialize network sample data, belong helper file. one helper file R file, named helper-FILENAME_IN_R_DIRECTORY-FUNCTION_NAME.R. Re-using existing test data preferable creating new data every test.","code":"git pull library(\"testthat\") testthat::test_dir(\"tests/testthat\")"},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Contributing","text":"final way contributing package developing vignettes/articles illustrate value added package. Please contact us directly proposals updating documentation, submit issue existing documentation unclear.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"versioning","dir":"","previous_headings":"","what":"Versioning","title":"Contributing","text":"Note package versioned according semantic versioning. means versions follow Major.Minor.Patch semantic format. minor major level version also given new version name, updated zzz.R file.","code":""},{"path":"https://globalgov.github.io/manydata/CONTRIBUTING.html","id":"for-developers-using-macos","dir":"","previous_headings":"","what":"For developers using MacOS","title":"Contributing","text":"Develops using MacOS might meet problems compiling packages since compiling configuration R MacOS usually incorrect. one meet error error info “/usr/bin/ld: find -lgfortran”, can either correct configuration follows following steps solve problem: 1. Run “.libPaths()” command R get path, e.g. one might get “/Library/Frameworks/R.framework/Versions/3.6/Resources/library” 2. path one get first step “something/library”, open file “something/etc/Makeconf” comment line starting “FLIBS”. e.g. one might open file ” /Library/Frameworks/R.framework/Versions/3.6/Resources/etc/Makeconf” change line “FLIBS = -L/usr/local/gfortran/lib/gcc/x86_64-apple-darwin15/6.1.0 -L/usr/local/gfortran/lib -lgfortran -lquadmath -lm” “#FLIBS = -L/usr/local/gfortran/lib/gcc/x86_64-apple-darwin15/6.1.0 -L/usr/local/gfortran/lib -lgfortran -lquadmath - lm”","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://globalgov.github.io/manydata/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"https://globalgov.github.io/manydata/articles/user.html","id":"discovering-data","dir":"Articles","previous_headings":"","what":"Discovering data","title":"Working with manydata","text":"first thing users package want identify datasets might contribute research goals. Since data packages big CRAN, expect developers instead choose make packages available GitHub. make easier identify packages many packages universe, developed get_packages() function. function lists many packages available allow users download .","code":"get_packages()"},{"path":"https://globalgov.github.io/manydata/articles/user.html","id":"understanding-data","dir":"Articles","previous_headings":"","what":"Understanding data","title":"Working with manydata","text":"Packages many packages universe advantage facilitate comparison analysis multiple datasets specific domain global governance. possible particular coding system follows principles across different packages. {manystates} example, datasets states database contain variables named Begand End represent beginning ending date episode state sovereignty. {manyenviron}, agreements database also Beg End variables attributed treaties (signature term dates). memberships database, Beg End represent relationship states agreement starts (either signature, ratification entry force) ends (either withdrawal term). specific variable name allows comparison across datasets different sources informations. enables point recurrence, difference absence observations datasets extract robust data researching particular governance domain.","code":""},{"path":"https://globalgov.github.io/manydata/articles/user.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"Working with manydata","text":"Let us say wish download {manystates} package, offers set datasets related state actors global governance. can download install latest release version {manystates} package using function , specifying package want ‘get’, ‘get_packages(“manystates”)’. now, let’s work Roman Emperors database included manydata. can get quick summary datasets included package following command: can see three named datasets relating emperors : wikipedia (dataset assembled Wikipedia pages), UNVR (United Nations Roman Vitrix), britannica (Britannica Encyclopedia List Roman Emperors). datasets advantages may wish understand differences, summarise variables across , perhaps also rerun models across . retrieve individual dataset database, can use pluck() function. However, real value various ‘many packages’ multiple datasets relating phenomenon presented together.","code":"data(package = \"manydata\") data(emperors, package = \"manydata\") emperors ## $wikipedia ## # A tibble: 68 × 15 ##    ID       Beg   End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause ##    <chr>    <mda> <mda> <chr>    <chr> <chr> <chr>     <chr>         <chr> <chr> ##  1 Augustus -002… 0014… IMPERAT… 0062… 0014… Rome      Italia        Birt… Assa… ##  2 Tiberius 0014… 0037… TIBERIV… 0041… 0037… Rome      Italia        Birt… Assa… ##  3 Caligula 0037… 0041… GAIVS I… 0012… 0041… Antitum   Italia        Birt… Assa… ##  4 Claudius 0041… 0054… TIBERIV… 0009… 0054… Lugdunum  Gallia Lugdu… Birt… Assa… ##  5 Nero     0054… 0068… NERO CL… 0037… 0068… Antitum   Italia        Birt… Suic… ##  6 Galba    0068… 0069… SERVIVS… 0002… 0069… Terracina Italia        Seiz… Assa… ##  7 Otho     0069… 0069… MARCVS … 0032… 0069… Terentin… Italia        Appo… Suic… ##  8 Vitelli… 0069… 0069… AVLVS V… 0015… 0069… Rome      Italia        Seiz… Assa… ##  9 Vespasi… 0069… 0079… TITVS F… 0009… 0079… Falacrine Italia        Seiz… Natu… ## 10 Titus    0079… 0081… TITVS F… 0039… 0081… Rome      Italia        Birt… Natu… ## # ℹ 58 more rows ## # ℹ 5 more variables: Killer <chr>, Dynasty <chr>, Era <chr>, Notes <chr>, ## #   Verif <chr> ##  ## $UNRV ## # A tibble: 99 × 7 ##    ID               Beg     End     Birth Death FullName                 Dynasty ##    <chr>            <mdate> <mdate> <chr> <chr> <chr>                    <chr>   ##  1 Augustus         -0027   -0014   63 BC 14    Gaius Julius Caesar Oct… Julio-… ##  2 Tiberius         -0014   0037    42 BC 37    Tiberius Claudius Nero … Julio-… ##  3 Gaius (Caligula) 0037    0041    12    14    Gaius Caesar Germanicus… Julio-… ##  4 Claudius         0041    0054    10 BC 41    Tiberius Claudius Nero … Julio-… ##  5 Nero             0054    0068    37    68    Claudius Nero Caesar (b… Julio-… ##  6 Galba            0068    0069    3 BC  69    Servius Sulpicius Galba… Year o… ##  7 Otho             0069    0069    32    69    Marcus Salvius Otho / I… Year o… ##  8 Vitellius        0069    0069    15    69    Aulus Vitellius / Aulus… Year o… ##  9 Vespasian        0069    0079    9     79    Titus Flavius Vespasian… Year o… ## 10 Titus            0079    0081    39    79    Titus Flavius Vespasian… Flavian ## # ℹ 89 more rows ##  ## $britannica ## # A tibble: 87 × 3 ##    ID              Beg     End     ##    <chr>           <mdate> <mdate> ##  1 Augustus        -0031   0014    ##  2 Tiberius        0014    0037    ##  3 Caligula        0037    0041    ##  4 Claudius        0041    0054    ##  5 Nero            0054    0068    ##  6 Galba           0068    0069    ##  7 Otho            0069-01 0069-04 ##  8 Aulus Vitellius 0069-07 0069-12 ##  9 Vespasian       0069    0079    ## 10 Titus           0079    0081    ## # ℹ 77 more rows wikipedia <- pluck(emperors, \"wikipedia\")"},{"path":"https://globalgov.github.io/manydata/articles/user.html","id":"comparing-data","dir":"Articles","previous_headings":"","what":"Comparing data","title":"Working with manydata","text":"First , want understand differences datasets database. One important way understand relationship datasets understand relative advantages disadvantages . example, one dataset may long (many observations) another shorter wider (variables). One might include details back history recent, include missing data less precise data (.e. coded less granular level) another restrictive. one might appear complete yet offer less information original data points sourced certain variables coded, another provides extensive transparent codebook facilitates replication.","code":""},{"path":"https://globalgov.github.io/manydata/articles/user.html","id":"using-data_source-and-data_contrast","dir":"Articles","previous_headings":"Comparing data","what":"Using data_source() and data_contrast()","title":"Working with manydata","text":"can bring database level documentation using: ?emperors. informs users datasets present database well variables various datasets. Though, want detailed summary various levels data sources, can use data_source() data_contrast(). data_source() function displays bibliographic references datasets within database. data_contrast() function returns data frame key metadata level data objects (many package, database, dataset). metadata includes following elements: Number unique observations Number rows Number columns Earliest beginning date Latest end date Source URL","code":"data_source(pkg = \"manydata\", database = NULL, dataset = NULL) ## Component 1 : ##            Reference                                                                                                         ## wikipedia  \"(????). \"List_of_Roman_emperors.\"<tps://en.wikipedia.org/wiki/List_of_Roman_emperors>. Accessed:202\" [truncated] ## UNRV       \"(????). \"Roman Emperor list.\"<https://www.unrv.com/government/emperor.php>. Accessed: 2021-07-22.\"               ## britannica \"(????). \"List of Roman emperors.\"<https://www.britannica.com/topic/list-of-Roman-emperors-2043294>.\" [truncated] data_contrast(pkg = \"manydata\", database = NULL, dataset = NULL) ## emperors : ##            Unique ID Missing Data Rows Columns         Beg        End ## wikipedia         68        9.9 %   68      15 -0026-01-16 0014-08-19 ## UNRV              98       6.06 %   99       7   -27-01-01  -14-12-31 ## britannica        87          0 %   87       3   -31-01-01   14-12-31 ##                                                                        URL ## wikipedia                           https://github.com/zonination/emperors ## UNRV                           https://www.unrv.com/government/emperor.php ## britannica https://www.britannica.com/topic/list-of-Roman-emperors-2043294"},{"path":"https://globalgov.github.io/manydata/articles/user.html","id":"an-example-of-inference-sensitivity-to-data-sources","dir":"Articles","previous_headings":"Comparing data","what":"An example of inference sensitivity to data sources","title":"Working with manydata","text":"Next may interested whether relationships interested inferences want draw sensitive data use. , interested robustness results different data specifications. can start exploring whether conclusion emperors began reign differ depending dataset use. can use purrr::map() function used , time pass mean() function tell operate just “Beg” variable, represents emperors began reign (removing NAs). Since manydata datasets always ordered “Beg” (“ID”), can remove subsequent (duplicated) entries ID concentrate first appearances.","code":"library(dplyr) emperors %>%    purrr::map(function(x){     x %>% dplyr::filter(!duplicated(ID)) %>%       dplyr::summarise(mean(Beg, na.rm = TRUE))   }) ## $wikipedia ## # A tibble: 68 × 1 ##    `mean(Beg, na.rm = TRUE)` ##    <chr>                     ##  1 -0026-01-16               ##  2 0014-09-18                ##  3 0037-03-18                ##  4 0041-01-25                ##  5 0054-10-13                ##  6 0068-06-08                ##  7 0069-01-15                ##  8 0069-04-17                ##  9 0069-12-21                ## 10 0079-06-24                ## # ℹ 58 more rows ##  ## $UNRV ## # A tibble: 98 × 1 ##    `mean(Beg, na.rm = TRUE)` ##    <chr>                     ##  1 -2027-07-02               ##  2 -2014-07-02               ##  3 37-07-02                  ##  4 41-07-02                  ##  5 54-07-02                  ##  6 68-07-01                  ##  7 69-07-02                  ##  8 69-07-02                  ##  9 69-07-02                  ## 10 79-07-02                  ## # ℹ 88 more rows ##  ## $britannica ## # A tibble: 87 × 1 ##    `mean(Beg, na.rm = TRUE)` ##    <chr>                     ##  1 -2031-07-02               ##  2 14-07-02                  ##  3 37-07-02                  ##  4 41-07-02                  ##  5 54-07-02                  ##  6 68-07-01                  ##  7 69-01-16                  ##  8 69-07-16                  ##  9 69-07-02                  ## 10 79-07-02                  ## # ℹ 77 more rows"},{"path":"https://globalgov.github.io/manydata/articles/user.html","id":"consolidating-data","dir":"Articles","previous_headings":"","what":"Consolidating data","title":"Working with manydata","text":"Now compared data looked different inferences drawn, let us examine select consolidate databases. consolidate() function facilitates consolidating set datasets, database, ‘many’ package single dataset combination rows columns. function includes separate arguments rows columns, well resolve conflicts observations across datasets. key argument indicates column collapse datasets . provides users considerable flexibility combine data. example, users may wish see units variables coded “” dataset (.e. units variables present least one datasets database) units variables coded “every” dataset (.e. units variables present datasets database). Users can also choose want resolve conflicts observations consolidate() several ‘resolve’ methods: coalesce: first non-NA value max: largest value min: smallest value mean: average value median: median value random: random value Users can even specify conflicts different variables ‘resolved’: Alternatively, users can “favour” dataset database others: Users can, even, declare multiple key ID columns consolidate database multiple datasets:","code":"consolidate(database = emperors, rows = \"any\", cols = \"any\",             resolve = \"coalesce\", key = \"ID\") ## There were 116 matched observations by ID variable across datasets in database. ## ℹ Resolving conflicts... ## ℹ Coalescing compatible rows... ## # A tibble: 138 × 15 ##    ID         CityBirth ProvinceBirth Rise  Cause Killer Era   Notes Verif Birth ##    <chr>      <chr>     <chr>         <chr> <chr> <chr>  <chr> <chr> <chr> <chr> ##  1 Aemilian   NA        Africa        Appo… Assa… Other… Prin… birt… NA    0207… ##  2 Allectus   NA        NA            NA    NA    NA     NA    NA    NA    ?     ##  3 Anastasius NA        NA            NA    NA    NA     NA    NA    NA    430   ##  4 Anthemius  NA        NA            NA    NA    NA     NA    NA    NA    420   ##  5 Antoninus… NA        NA            NA    NA    NA     NA    NA    NA    86    ##  6 Antonius … Lanuvium  Italia        Birt… Natu… Disea… Prin… NA    NA    0086… ##  7 Arcadius   NA        NA            NA    NA    NA     NA    NA    NA    377   ##  8 Augustus   Rome      Italia        Birt… Assa… Wife   Prin… birt… Redd… 0062… ##  9 Aulus Vit… NA        NA            NA    NA    NA     NA    NA    NA    NA    ## 10 Aurelian   Sirmium   Pannonia      Appo… Assa… Praet… Prin… NA    NA    0214… ## # ℹ 128 more rows ## # ℹ 5 more variables: Death <chr>, FullName <chr>, Dynasty <chr>, Beg <mdate>, ## #   End <mdate> consolidate(database = emperors, rows = \"every\", cols = \"every\",             resolve = \"coalesce\", key = \"ID\") ## There were 116 matched observations by ID variable across datasets in database. ## ℹ Resolving conflicts... ## ℹ Coalescing compatible rows... ## # A tibble: 41 × 3 ##    ID             Beg         End         ##    <chr>          <mdate>     <mdate>     ##  1 Aemilian       0253-08-15~ 0253-10-15~ ##  2 Augustus       -0026-01-16 0014-08-19  ##  3 Aurelian       0270-09-15  0275-09-15  ##  4 Balbinus       0238-04-22  0238-07-29  ##  5 Caracalla      0198        0217-04-08  ##  6 Carinus        0283-08-01~ 0285-08-01~ ##  7 Carus          0282-10-01~ 0283-08-01~ ##  8 Claudius       0041-01-25  0054-10-13  ##  9 Commodus       0177        0192-12-31  ## 10 Constantine II 0337-05-22  0340-01-01  ## # ℹ 31 more rows consolidate(database = emperors, rows = \"any\", cols = \"every\", resolve = \"max\", key = \"ID\") ## There were 116 matched observations by ID variable across datasets in database. ## ℹ Resolving conflicts... ## ℹ Coalescing compatible rows... ## # A tibble: 138 × 3 ##    ID              Beg         End         ##    <chr>           <chr>       <chr>       ##  1 Aemilian        0253-08-15~ 0253-10-15~ ##  2 Allectus        0293        0297        ##  3 Anastasius      0491        0518        ##  4 Anthemius       0467        0472        ##  5 Antoninus Pius  0138        0161        ##  6 Antonius Pius   0138-07-10  0161-03-07  ##  7 Arcadius        0395        0408        ##  8 Augustus        -0026-01-16 0014-08-19  ##  9 Aulus Vitellius 0069-07     0069-12     ## 10 Aurelian        0270-09-15  0275-09-15  ## # ℹ 128 more rows consolidate(database = emperors, rows = \"every\", cols = \"any\", resolve = \"min\", key = \"ID\") ## There were 116 matched observations by ID variable across datasets in database. ## ℹ Resolving conflicts... ## ℹ Coalescing compatible rows... ## # A tibble: 41 × 15 ##    ID         CityBirth ProvinceBirth Rise  Cause Killer Era   Notes Verif Birth ##    <chr>      <chr>     <chr>         <chr> <chr> <chr>  <chr> <chr> <chr> <chr> ##  1 Aemilian   NA        Africa        Appo… Assa… Other… Prin… birt… NA    0207… ##  2 Augustus   Rome      Italia        Birt… Assa… Wife   Prin… birt… Redd… 0062… ##  3 Aurelian   Sirmium   Pannonia      Appo… Assa… Praet… Prin… NA    NA    0214… ##  4 Balbinus   NA        Unknown       Appo… Assa… Praet… Prin… birt… NA    0178… ##  5 Caracalla  Lugdunum  Gallia Lugdu… Birt… Assa… Other… Prin… reig… NA    0188… ##  6 Carinus    NA        Unknown       Birt… Died… Oppos… Prin… deat… NA    ?     ##  7 Carus      Narbo     Gallia Narbo… Seiz… Natu… Light… Prin… birt… NA    0230… ##  8 Claudius   Lugdunum  Gallia Lugdu… Birt… Assa… Wife   Prin… birt… Redd… 0009… ##  9 Commodus   Lanuvium  Italia        Birt… Assa… Praet… Prin… reig… NA    0161… ## 10 Constanti… Arelate   Gallia Narbo… Birt… Exec… Other… Domi… birt… NA    0316… ## # ℹ 31 more rows ## # ℹ 5 more variables: Death <chr>, FullName <chr>, Dynasty <chr>, Beg <chr>, ## #   End <chr> consolidate(database = emperors, rows = \"every\", cols = \"every\", resolve = \"mean\", key = \"ID\") ## There were 116 matched observations by ID variable across datasets in database. ## ℹ Resolving conflicts... ## ℹ Coalescing compatible rows... ## # A tibble: 41 × 3 ##    ID             Beg         End         ##    <chr>          <chr>       <chr>       ##  1 Aemilian       0253-08-15~ 0253-10-15~ ##  2 Augustus       -0026-01-16 0014-08-19  ##  3 Aurelian       0270-09-15  0275-09-15  ##  4 Balbinus       0238-04-22  0238-07-29  ##  5 Caracalla      0198        0217-04-08  ##  6 Carinus        0283-08-01~ 0285-08-01~ ##  7 Carus          0282-10-01~ 0283-08-01~ ##  8 Claudius       0041-01-25  0054-10-13  ##  9 Commodus       0177        0192-12-31  ## 10 Constantine II 0337-05-22  0340-01-01  ## # ℹ 31 more rows consolidate(database = emperors, rows = \"any\", cols = \"any\", resolve = \"median\", key = \"ID\") ## There were 116 matched observations by ID variable across datasets in database. ## ℹ Resolving conflicts... ## ℹ Coalescing compatible rows... ## # A tibble: 138 × 15 ##    ID         CityBirth ProvinceBirth Rise  Cause Killer Era   Notes Verif Birth ##    <chr>      <chr>     <chr>         <chr> <chr> <chr>  <chr> <chr> <chr> <chr> ##  1 Aemilian   NA        Africa        Appo… Assa… Other… Prin… birt… NA    0207… ##  2 Allectus   NA        NA            NA    NA    NA     NA    NA    NA    ?     ##  3 Anastasius NA        NA            NA    NA    NA     NA    NA    NA    430   ##  4 Anthemius  NA        NA            NA    NA    NA     NA    NA    NA    420   ##  5 Antoninus… NA        NA            NA    NA    NA     NA    NA    NA    86    ##  6 Antonius … Lanuvium  Italia        Birt… Natu… Disea… Prin… NA    NA    0086… ##  7 Arcadius   NA        NA            NA    NA    NA     NA    NA    NA    377   ##  8 Augustus   Rome      Italia        Birt… Assa… Wife   Prin… birt… Redd… 0062… ##  9 Aulus Vit… NA        NA            NA    NA    NA     NA    NA    NA    NA    ## 10 Aurelian   Sirmium   Pannonia      Appo… Assa… Praet… Prin… NA    NA    0214… ## # ℹ 128 more rows ## # ℹ 5 more variables: Death <chr>, FullName <chr>, Dynasty <chr>, Beg <chr>, ## #   End <chr> consolidate(database = emperors, rows = \"every\", cols = \"every\", resolve = \"random\", key = \"ID\") ## There were 116 matched observations by ID variable across datasets in database. ## ℹ Resolving conflicts... ## ℹ Coalescing compatible rows... ## # A tibble: 41 × 3 ##    ID             Beg         End         ##    <chr>          <chr>       <chr>       ##  1 Aemilian       0253-08-15~ 0253-10-15~ ##  2 Augustus       -0026-01-16 0014-08-19  ##  3 Aurelian       0270-09-15  0275-09-15  ##  4 Balbinus       0238-04-22  0238-07-29  ##  5 Caracalla      0198        0217-04-08  ##  6 Carinus        0283-08-01  0285-08-01~ ##  7 Carus          0282-10-01~ 0283-08-01  ##  8 Claudius       2041-12-31  2054-12-31  ##  9 Commodus       0177        0192-12-31  ## 10 Constantine II 0337-05-22  0340-01-01  ## # ℹ 31 more rows consolidate(database = emperors, rows = \"any\", cols = \"every\", resolve = c(Beg = \"min\", End = \"max\"), key = \"ID\") ## There were 116 matched observations by ID variable across datasets in database. ## ℹ Resolving conflicts... ## ℹ Coalescing compatible rows... ## # A tibble: 138 × 3 ##    ID              Beg         End         ##    <chr>           <chr>       <chr>       ##  1 Aemilian        0253-08-15~ 0253-10-15~ ##  2 Allectus        0293        0297        ##  3 Anastasius      0491        0518        ##  4 Anthemius       0467        0472        ##  5 Antoninus Pius  0138        0161        ##  6 Antonius Pius   0138-07-10  0161-03-07  ##  7 Arcadius        0395        0408        ##  8 Augustus        -0026-01-16 0014-08-19  ##  9 Aulus Vitellius 0069-07     0069-12     ## 10 Aurelian        0270-09-15  0275-09-15  ## # ℹ 128 more rows consolidate(database = favour(emperors, \"UNRV\"), rows = \"every\", cols = \"any\", resolve = \"coalesce\", key = \"ID\") ## There were 116 matched observations by ID variable across datasets in database. ## ℹ Resolving conflicts... ## ℹ Coalescing compatible rows... ## # A tibble: 41 × 15 ##    ID    FullName Birth Death CityBirth ProvinceBirth Rise  Cause Killer Dynasty ##    <chr> <chr>    <chr> <chr> <chr>     <chr>         <chr> <chr> <chr>  <chr>   ##  1 Aemi… \"Marcus… 207?  253   NA        Africa        Appo… Assa… Other… Gordian ##  2 Augu… \"Gaius … 63 BC 14    Rome      Italia        Birt… Assa… Wife   Julio-… ##  3 Aure… \"Lucius… 214   275   Sirmium   Pannonia      Appo… Assa… Praet… Gordian ##  4 Balb… \"Decimu… 170?  238   NA        Unknown       Appo… Assa… Praet… Gordian ##  5 Cara… \"born L… 188   217   Lugdunum  Gallia Lugdu… Birt… Assa… Other… Severan ##  6 Cari… \"Marcus… ?     285   NA        Unknown       Birt… Died… Oppos… co-emp… ##  7 Carus \"Marcus… 230?  283   Narbo     Gallia Narbo… Seiz… Natu… Light… .       ##  8 Clau… \"Tiberi… 10 BC 41    Lugdunum  Gallia Lugdu… Birt… Assa… Wife   Julio-… ##  9 Comm… \"Marcus… 161   192   Lanuvium  Italia        Birt… Assa… Praet… Adopti… ## 10 Cons… \"Flaviu… 317   340   Arelate   Gallia Narbo… Birt… Exec… Other… House … ## # ℹ 31 more rows ## # ℹ 5 more variables: Era <chr>, Notes <chr>, Verif <chr>, Beg <mdate>, ## #   End <mdate> consolidate(database = emperors, rows = \"any\", cols = \"any\", resolve = c(Death = \"max\", Cause = \"coalesce\"),             key = c(\"ID\", \"Beg\")) ## ℹ Resolving conflicts... ## ℹ Coalescing compatible rows... ## # A tibble: 202 × 4 ##    ID             Beg         Cause          Death       ##    <chr>          <mdate>     <chr>          <chr>       ##  1 Aemilian       0253        NA             253         ##  2 Aemilian       0253-08-15~ Assassination  0253-10-15~ ##  3 Allectus       0293        NA             297         ##  4 Anastasius     0491        NA             518         ##  5 Anthemius      0467        NA             472         ##  6 Antoninus Pius 0138        NA             161         ##  7 Antonius Pius  0138-07-10  Natural Causes 0161-03-07  ##  8 Arcadius       0383        NA             NA          ##  9 Arcadius       0395        NA             408         ## 10 Augustus       -0026-01-16 Assassination  0014-08-19  ## # ℹ 192 more rows"},{"path":"https://globalgov.github.io/manydata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Hollway. Maintainer, author, contributor.            IHEID Henrique Sposito. Contributor.            IHEID Bernhard Bieri. Contributor.            IHEID Esther Peev. Contributor.            IHEID Jael Tan. Contributor.            IHEID","code":""},{"path":"https://globalgov.github.io/manydata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hollway J (2021). manydata: portal global governance data. https://github.com/globalgov/manydata.","code":"@Manual{,   title = {manydata: The portal for global governance data},   author = {James Hollway},   year = {2021},   url = {https://github.com/globalgov/manydata}, }"},{"path":"https://globalgov.github.io/manydata/index.html","id":"manydata-","dir":"","previous_headings":"","what":"A Portal for Global Governance Data","title":"A Portal for Global Governance Data","text":"manydata central package many packages universe aimed collecting, connecting, correcting network data across issue-domains global governance. assist users , manydata contains functions enable users download manipulate data easily.","code":""},{"path":"https://globalgov.github.io/manydata/index.html","id":"why-manydata","dir":"","previous_headings":"","what":"Why manydata?","title":"A Portal for Global Governance Data","text":"manydata offers users access tested data various ‘many packages’ available, use analyses global governance beyond. special feature ‘many packages’ ‘opinionated’ - instead offering single, supposedly authoritative version global governance events, packages many packages universe gather well-regarded datasets issue-domain three-dimensional ‘datacubes’. chief advantage global governance researchers enables quick easy way check robustness results using different formulations study population concept specification. ‘datacube’ structure specific coding system variables across datasets. details, please see vignette.","code":""},{"path":"https://globalgov.github.io/manydata/index.html","id":"downloading-and-installing-manydata","dir":"","previous_headings":"","what":"Downloading and installing manydata","title":"A Portal for Global Governance Data","text":"easiest way install manydata directly CRAN. development version package manydata can also downloaded GitHub.","code":"install.packages(\"manydata\") # install.packages(\"remotes\") remotes::install_github(\"globalgov/manydata\")"},{"path":"https://globalgov.github.io/manydata/index.html","id":"available-many-packages","dir":"","previous_headings":"","what":"Available ‘many’ packages","title":"A Portal for Global Governance Data","text":"manydata connects users packages help fill global governance researchers’ data needs. get_packages() function can used discover ‘many packages’ currently available. Please see website information use manydata.","code":"library(manydata) get_packages()"},{"path":"https://globalgov.github.io/manydata/index.html","id":"visualising-many-databases","dir":"","previous_headings":"","what":"Visualising ‘many’ databases","title":"A Portal for Global Governance Data","text":"‘many’ data packages downloaded, manydata helps users visualize relationship matched observations across datasets within database. Database profiling functions return confirmed, unique, missing, conflicting, majority values (non-ID) variables datasets ‘many’ package database.","code":"db_plot(database = emperors, key = \"ID\", variable = \"all\", category = \"all\") #> There were 116 matched observations by ID variable across datasets in database."},{"path":"https://globalgov.github.io/manydata/index.html","id":"consolidating-many-databases","dir":"","previous_headings":"","what":"Consolidating ‘many’ databases","title":"A Portal for Global Governance Data","text":"manydata also contains flexible methods consolidating ‘many’ package database single dataset combination rows, columns, well resolve conflicts observations across datasets.","code":"consolidate(database = emperors, rows = \"every\", cols = \"every\",             resolve = \"coalesce\", key = \"ID\") #> There were 116 matched observations by ID variable across datasets in database.  #> # A tibble: 41 × 3 #>    ID             Beg         End         #>    <chr>          <mdate>     <mdate>     #>  1 Aemilian       0253-08-15~ 0253-10-15~ #>  2 Augustus       -0026-01-16 0014-08-19  #>  3 Aurelian       0270-09-15  0275-09-15  #>  4 Balbinus       0238-04-22  0238-07-29  #>  5 Caracalla      0198        0217-04-08  #>  6 Carinus        0283-08-01~ 0285-08-01~ #>  7 Carus          0282-10-01~ 0283-08-01~ #>  8 Claudius       0041-01-25  0054-10-13  #>  9 Commodus       0177        0192-12-31  #> 10 Constantine II 0337-05-22  0340-01-01  #> # … with 31 more rows"},{"path":"https://globalgov.github.io/manydata/index.html","id":"cheat-sheet","dir":"","previous_headings":"","what":"Cheat Sheet","title":"A Portal for Global Governance Data","text":"manydata contains several functions help global governance researchers. quick overview, please also check package cheat sheet.","code":""},{"path":"https://globalgov.github.io/manydata/index.html","id":"contributing-to-the-many-packages-universe","dir":"","previous_headings":"","what":"Contributing to the many packages universe","title":"A Portal for Global Governance Data","text":"information developers data contributors ‘many packages’, please see {manypkgs} website.","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/pull_request_template.html","id":"checklist","dir":"","previous_headings":"","what":"Checklist:","title":"Description","text":"given pull request informative title Description itemizes changes subtitles, e.g. “## Collection”” closed, fixed, related issues referenced explained description , e.g. “Fixed #0 adding ” Package builds OS without issues Package builds Mac Package builds Windows Package builds Linux CodeCov check: Package improves maintains good test coverage CodeFactor check: Package improves maintains good style new modified functions data roxygen style documentation .R scripts longer functions commented inline easier debug future PR description NEWS.md file aligned DESCRIPTION file version bumped appropriate increment (major, minor, patch)","code":""},{"path":"https://globalgov.github.io/manydata/reference/coalesce_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Get first non-missing — coalesce_rows","title":"Get first non-missing — coalesce_rows","text":"use dplyr::summarise, example","code":""},{"path":"https://globalgov.github.io/manydata/reference/coalesce_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get first non-missing — coalesce_rows","text":"","code":"coalesce_rows(x)"},{"path":"https://globalgov.github.io/manydata/reference/coalesce_rows.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get first non-missing — coalesce_rows","text":"https://stackoverflow.com/questions/40515180/dplyr---find--first-non-missing-string--groups","code":""},{"path":"https://globalgov.github.io/manydata/reference/coalesce_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get first non-missing — coalesce_rows","text":"x vector","code":""},{"path":"https://globalgov.github.io/manydata/reference/coalesce_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get first non-missing — coalesce_rows","text":"single value","code":""},{"path":"https://globalgov.github.io/manydata/reference/coalesce_rows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get first non-missing — coalesce_rows","text":"function operates similarly coalesce columns, picking first non-missing observation, observations rather variables.","code":""},{"path":"https://globalgov.github.io/manydata/reference/coalesce_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get first non-missing — coalesce_rows","text":"","code":"dplyr::summarise(emperors$wikipedia, coalesce_rows(emperors$wikipedia)) #> Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in #> dplyr 1.1.0. #> ℹ Please use `reframe()` instead. #> ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` #>   always returns an ungrouped data frame and adjust accordingly. #> # A tibble: 68 × 1 #>    ID        #>    <chr>     #>  1 Augustus  #>  2 Tiberius  #>  3 Caligula  #>  4 Claudius  #>  5 Nero      #>  6 Galba     #>  7 Otho      #>  8 Vitellius #>  9 Vespasian #> 10 Titus     #> # ℹ 58 more rows coalesce_rows(emperors$wikipedia$Beg) #> [1] \"-0026-01-16\""},{"path":"https://globalgov.github.io/manydata/reference/consolidate.html","id":null,"dir":"Reference","previous_headings":"","what":"Consolidate database into a single dataset — consolidate","title":"Consolidate database into a single dataset — consolidate","text":"function consolidates set datasets 'many* package' database single dataset combination rows, columns, observations datasets database. function includes separate arguments rows columns, well resolve conflicts observations across datasets. provides users considerable flexibility combine data. example, users may wish stick units appear every dataset include variables coded dataset, units appear dataset variables appear every dataset. Even may conflicts, actual unit-variable observations may differ dataset dataset. offer number resolve methods enable users choose conflicts observations resolved.","code":""},{"path":"https://globalgov.github.io/manydata/reference/consolidate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consolidate database into a single dataset — consolidate","text":"","code":"consolidate(   database,   rows = \"any\",   cols = \"any\",   resolve = \"coalesce\",   key = \"manyID\" )"},{"path":"https://globalgov.github.io/manydata/reference/consolidate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consolidate database into a single dataset — consolidate","text":"database database object one many packages rows rows units retain. default \"\" () units retained, another option \"every\", retains units appear parent datasets. cols columns variables retain. default \"\" () variables retained, another option \"every\", retains variables appear parent datasets. resolve conflicts observations resolved? default \"coalesce\", options include: \"min\", \"max\", \"mean\", \"median\", \"random\". \"coalesce\" takes first non-NA value. \"max\" takes largest value. \"min\" takes smallest value. \"mean\" takes average value. \"median\" takes median value. \"random\" takes random value. different variables resolved differently, can specify variables' names alongside resolved list (e.g. resolve = c(var1 = \"min\", var2 = \"max\")). case, variables named resolved returned. key ID column collapse . default \"many_ID\". Users can also specify multiple key variables list. multiple key variables, key variables must present datasets database (e.g. key = c(\"key1\", \"key2\")). equivalent key columns different names across datasets, matching possible keys declared (e.g. key = c(\"key1\" = \"key2\")). Missing observations key variable removed.","code":""},{"path":"https://globalgov.github.io/manydata/reference/consolidate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consolidate database into a single dataset — consolidate","text":"single tibble/data frame.","code":""},{"path":"https://globalgov.github.io/manydata/reference/consolidate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Consolidate database into a single dataset — consolidate","text":"Text variables dropped efficient consolidation.","code":""},{"path":"https://globalgov.github.io/manydata/reference/consolidate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Consolidate database into a single dataset — consolidate","text":"","code":"# \\donttest{ consolidate(database = emperors, key = \"ID\") #> There were 116 matched observations by ID variable across datasets in database. #> ℹ Resolving conflicts... #> ℹ Coalescing compatible rows... #> # A tibble: 138 × 15 #>    ID         CityBirth ProvinceBirth Rise  Cause Killer Era   Notes Verif Birth #>    <chr>      <chr>     <chr>         <chr> <chr> <chr>  <chr> <chr> <chr> <chr> #>  1 Aemilian   NA        Africa        Appo… Assa… Other… Prin… birt… NA    0207… #>  2 Allectus   NA        NA            NA    NA    NA     NA    NA    NA    ?     #>  3 Anastasius NA        NA            NA    NA    NA     NA    NA    NA    430   #>  4 Anthemius  NA        NA            NA    NA    NA     NA    NA    NA    420   #>  5 Antoninus… NA        NA            NA    NA    NA     NA    NA    NA    86    #>  6 Antonius … Lanuvium  Italia        Birt… Natu… Disea… Prin… NA    NA    0086… #>  7 Arcadius   NA        NA            NA    NA    NA     NA    NA    NA    377   #>  8 Augustus   Rome      Italia        Birt… Assa… Wife   Prin… birt… Redd… 0062… #>  9 Aulus Vit… NA        NA            NA    NA    NA     NA    NA    NA    NA    #> 10 Aurelian   Sirmium   Pannonia      Appo… Assa… Praet… Prin… NA    NA    0214… #> # ℹ 128 more rows #> # ℹ 5 more variables: Death <chr>, FullName <chr>, Dynasty <chr>, Beg <mdate>, #> #   End <mdate> consolidate(database = favour(emperors, \"UNRV\"), rows = \"every\", cols = \"every\", resolve = \"coalesce\", key = \"ID\") #> There were 116 matched observations by ID variable across datasets in database. #> ℹ Resolving conflicts... #> ℹ Coalescing compatible rows... #> # A tibble: 41 × 3 #>    ID             Beg     End     #>    <chr>          <mdate> <mdate> #>  1 Aemilian       0253    0253    #>  2 Augustus       -0027   -0014   #>  3 Aurelian       0270    0275    #>  4 Balbinus       0238    0238    #>  5 Caracalla      0211    0217    #>  6 Carinus        0283    0285    #>  7 Carus          0282    0283    #>  8 Claudius       0041    0054    #>  9 Commodus       0180    0192    #> 10 Constantine II 0337    0340    #> # ℹ 31 more rows consolidate(database = emperors, rows = \"any\", cols = \"every\", resolve = \"min\", key = \"ID\") #> There were 116 matched observations by ID variable across datasets in database. #> ℹ Resolving conflicts... #> ℹ Coalescing compatible rows... #> # A tibble: 138 × 3 #>    ID              Beg         End         #>    <chr>           <chr>       <chr>       #>  1 Aemilian        0253-08-15~ 0253-10-15~ #>  2 Allectus        0293        0297        #>  3 Anastasius      0491        0518        #>  4 Anthemius       0467        0472        #>  5 Antoninus Pius  0138        0161        #>  6 Antonius Pius   0138-07-10  0161-03-07  #>  7 Arcadius        0395        0408        #>  8 Augustus        -0026-01-16 0014-08-19  #>  9 Aulus Vitellius 0069-07     0069-12     #> 10 Aurelian        0270-09-15  0275-09-15  #> # ℹ 128 more rows consolidate(database = emperors, rows = \"every\", cols = \"any\", resolve = \"max\", key = \"ID\") #> There were 116 matched observations by ID variable across datasets in database. #> ℹ Resolving conflicts... #> ℹ Coalescing compatible rows... #> # A tibble: 41 × 15 #>    ID         CityBirth ProvinceBirth Rise  Cause Killer Era   Notes Verif Birth #>    <chr>      <chr>     <chr>         <chr> <chr> <chr>  <chr> <chr> <chr> <chr> #>  1 Aemilian   NA        Africa        Appo… Assa… Other… Prin… birt… NA    207?  #>  2 Augustus   Rome      Italia        Birt… Assa… Wife   Prin… birt… Redd… 63 BC #>  3 Aurelian   Sirmium   Pannonia      Appo… Assa… Praet… Prin… NA    NA    214   #>  4 Balbinus   NA        Unknown       Appo… Assa… Praet… Prin… birt… NA    170?  #>  5 Caracalla  Lugdunum  Gallia Lugdu… Birt… Assa… Other… Prin… reig… NA    188   #>  6 Carinus    NA        Unknown       Birt… Died… Oppos… Prin… deat… NA    ?     #>  7 Carus      Narbo     Gallia Narbo… Seiz… Natu… Light… Prin… birt… NA    230?  #>  8 Claudius   Lugdunum  Gallia Lugdu… Birt… Assa… Wife   Prin… birt… Redd… 10 BC #>  9 Commodus   Lanuvium  Italia        Birt… Assa… Praet… Prin… reig… NA    161   #> 10 Constanti… Arelate   Gallia Narbo… Birt… Exec… Other… Domi… birt… NA    317   #> # ℹ 31 more rows #> # ℹ 5 more variables: Death <chr>, FullName <chr>, Dynasty <chr>, Beg <chr>, #> #   End <chr> consolidate(database = emperors, rows = \"every\", cols = \"every\", resolve = \"median\", key = \"ID\") #> There were 116 matched observations by ID variable across datasets in database. #> ℹ Resolving conflicts... #> ℹ Coalescing compatible rows... #> # A tibble: 41 × 3 #>    ID             Beg         End         #>    <chr>          <chr>       <chr>       #>  1 Aemilian       0253-08-15~ 0253-10-15~ #>  2 Augustus       -0026-01-16 0014-08-19  #>  3 Aurelian       0270-09-15  0275-09-15  #>  4 Balbinus       0238-04-22  0238-07-29  #>  5 Caracalla      0198        0217-04-08  #>  6 Carinus        0283-08-01~ 0285-08-01~ #>  7 Carus          0282-10-01~ 0283-08-01~ #>  8 Claudius       2041-12-31  2054-12-31  #>  9 Commodus       0177        0192-12-31  #> 10 Constantine II 0337-05-22  0340-01-01  #> # ℹ 31 more rows consolidate(database = emperors, rows = \"every\", cols = \"every\", resolve = \"mean\", key = \"ID\") #> There were 116 matched observations by ID variable across datasets in database. #> ℹ Resolving conflicts... #> ℹ Coalescing compatible rows... #> # A tibble: 41 × 3 #>    ID             Beg         End         #>    <chr>          <chr>       <chr>       #>  1 Aemilian       0253-08-15~ 0253-10-15~ #>  2 Augustus       -0026-01-16 0014-08-19  #>  3 Aurelian       0270-09-15  0275-09-15  #>  4 Balbinus       0238-04-22  0238-07-29  #>  5 Caracalla      0198        0217-04-08  #>  6 Carinus        0283-08-01~ 0285-08-01~ #>  7 Carus          0282-10-01~ 0283-08-01~ #>  8 Claudius       0041-01-25  0054-10-13  #>  9 Commodus       0177        0192-12-31  #> 10 Constantine II 0337-05-22  0340-01-01  #> # ℹ 31 more rows consolidate(database = emperors, rows = \"every\", cols = \"every\", resolve = \"random\", key = \"ID\") #> There were 116 matched observations by ID variable across datasets in database. #> ℹ Resolving conflicts... #> ℹ Coalescing compatible rows... #> # A tibble: 41 × 3 #>    ID             Beg         End         #>    <chr>          <chr>       <chr>       #>  1 Aemilian       0253-08-15~ 0253-10-15~ #>  2 Augustus       -026-01-16  0014-08-19  #>  3 Aurelian       0270-09-15  0275-09-15  #>  4 Balbinus       0238-04-22  0238-07-29  #>  5 Caracalla      0198        0217-04-08  #>  6 Carinus        0283-08-01~ 0285-08-01~ #>  7 Carus          0282-10-01~ 0283-08-01~ #>  8 Claudius       2041-12-31  0054-10-13  #>  9 Commodus       0177        0192-12-31  #> 10 Constantine II 0337-05-22  0340-01-01  #> # ℹ 31 more rows consolidate(database = emperors, rows = \"every\", cols = \"every\", resolve = c(Beg = \"min\", End = \"max\"), key = \"ID\") #> There were 116 matched observations by ID variable across datasets in database. #> ℹ Resolving conflicts... #> ℹ Coalescing compatible rows... #> # A tibble: 41 × 3 #>    ID             Beg         End         #>    <chr>          <chr>       <chr>       #>  1 Aemilian       0253-08-15~ 0253-10-15~ #>  2 Augustus       -0026-01-16 0014-08-19  #>  3 Aurelian       0270-09-15  0275-09-15  #>  4 Balbinus       0238-04-22  0238-07-29  #>  5 Caracalla      0198        0217-04-08  #>  6 Carinus        0283-08-01~ 0285-08-01~ #>  7 Carus          0282-10-01~ 0283-08-01~ #>  8 Claudius       0041-01-25  2054-12-31  #>  9 Commodus       0177        0192-12-31  #> 10 Constantine II 0337-05-22  0340-01-01  #> # ℹ 31 more rows consolidate(database = emperors, rows = \"any\", cols = \"any\", resolve = c(Death = \"max\", Cause = \"coalesce\"), key = c(\"ID\", \"Beg\")) #> ℹ Resolving conflicts... #> ℹ Coalescing compatible rows... #> # A tibble: 202 × 4 #>    ID             Beg         Cause          Death       #>    <chr>          <mdate>     <chr>          <chr>       #>  1 Aemilian       0253        NA             253         #>  2 Aemilian       0253-08-15~ Assassination  0253-10-15~ #>  3 Allectus       0293        NA             297         #>  4 Anastasius     0491        NA             518         #>  5 Anthemius      0467        NA             472         #>  6 Antoninus Pius 0138        NA             161         #>  7 Antonius Pius  0138-07-10  Natural Causes 0161-03-07  #>  8 Arcadius       0383        NA             NA          #>  9 Arcadius       0395        NA             408         #> 10 Augustus       -0026-01-16 Assassination  0014-08-19  #> # ℹ 192 more rows # }"},{"path":"https://globalgov.github.io/manydata/reference/db_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Database profile functions — db_profile","title":"Database profile functions — db_profile","text":"Database profiling functions returns confirmed, unique, missing, conflicting, majority values (non-ID) variables datasets 'many' package database.","code":""},{"path":"https://globalgov.github.io/manydata/reference/db_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Database profile functions — db_profile","text":"","code":"db_plot(database, key = \"manyID\", variable = \"all\", category = \"all\")  db_comp(database, key = \"manyID\", variable = \"all\", category = \"all\")"},{"path":"https://globalgov.github.io/manydata/reference/db_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database profile functions — db_profile","text":"database many database. key variable key join datasets , \"manyID\" default. variable like focus one, , specific variables? default \"\". multiple variables, please declare variable names vector. category like focus one specific code category? default \"\" returned. options include \"confirmed\", \"unique\", \"missing\", \"conflicting\", \"majority\". multiple variables, please declare categories vector.","code":""},{"path":"https://globalgov.github.io/manydata/reference/db_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Database profile functions — db_profile","text":"plot, tibble, profile variables across datasets \"many\" database. multiple categories across multiple variables, functions return rows contain least one selected variables coded one categories.","code":""},{"path":"https://globalgov.github.io/manydata/reference/db_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Database profile functions — db_profile","text":"Confirmed values datasets database. Unique values appear datasets database. Missing values missing datasets database. Conflicting values different number datasets database. Majority values value multiple, , datasets database. db_plot() plots database profile. db_comp() creates tibble comparing variables database.","code":""},{"path":"https://globalgov.github.io/manydata/reference/db_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Database profile functions — db_profile","text":"","code":"# \\donttest{ db_plot(database = emperors, key = \"ID\") #> There were 116 matched observations by ID variable across datasets in database.  db_plot(database = emperors, key = \"ID\", variable = c(\"Beg\", \"End\")) #> There were 116 matched observations by ID variable across datasets in database.  db_plot(database = emperors, key = \"ID\", variable = c(\"Beg\", \"End\"), category = c(\"conflict\", \"unique\")) #> There were 116 matched observations by ID variable across datasets in database.  # } # \\donttest{ db_comp(database = emperors, key = \"ID\") #> There were 116 matched observations by ID variable across datasets in database. #> # A tibble: 139 × 37 #>    ID      `wikipedia$Beg` `UNRV$Beg` `britannica$Beg` `Beg (3)` `wikipedia$End` #>    <chr>   <mdate>         <mdate>    <mdate>          <chr>     <mdate>         #>  1 August… -0026-01-16     -0027      -0031            conflict  0014-08-19      #>  2 Tiberi… 0014-09-18      -0014      0014             conflict  0037-03-16      #>  3 Caligu… 0037-03-18      NA         0037             conflict  0041-01-24      #>  4 Claudi… 0041-01-25      0041       0041             majority  0054-10-13      #>  5 Nero    0054-10-13      0054       0054             majority  0068-06-09      #>  6 Galba   0068-06-08      0068       0068             majority  0069-01-15      #>  7 Otho    0069-01-15      0069       0069-01          conflict  0069-04-16      #>  8 Vitell… 0069-04-17      0069       NA               conflict  0069-12-20      #>  9 Vespas… 0069-12-21      0069       0069             majority  0079-06-24      #> 10 Titus   0079-06-24      0079       0079             majority  0081-09-13      #> # ℹ 129 more rows #> # ℹ 31 more variables: `UNRV$End` <mdate>, `britannica$End` <mdate>, #> #   `End (3)` <chr>, `wikipedia$FullName` <chr>, `UNRV$FullName` <chr>, #> #   `FullName (2)` <chr>, `wikipedia$Birth` <chr>, `UNRV$Birth` <chr>, #> #   `Birth (2)` <chr>, `wikipedia$Death` <chr>, `UNRV$Death` <chr>, #> #   `Death (2)` <chr>, `wikipedia$CityBirth` <chr>, `CityBirth (1)` <chr>, #> #   `wikipedia$ProvinceBirth` <chr>, `ProvinceBirth (1)` <chr>, … db_comp(database = emperors, key = \"ID\", variable = \"Beg\") #> There were 116 matched observations by ID variable across datasets in database. #> # A tibble: 139 × 5 #>    ID        `wikipedia$Beg` `UNRV$Beg` `britannica$Beg` `Beg (3)` #>    <chr>     <mdate>         <mdate>    <mdate>          <chr>     #>  1 Augustus  -0026-01-16     -0027      -0031            conflict  #>  2 Tiberius  0014-09-18      -0014      0014             conflict  #>  3 Caligula  0037-03-18      NA         0037             conflict  #>  4 Claudius  0041-01-25      0041       0041             majority  #>  5 Nero      0054-10-13      0054       0054             majority  #>  6 Galba     0068-06-08      0068       0068             majority  #>  7 Otho      0069-01-15      0069       0069-01          conflict  #>  8 Vitellius 0069-04-17      0069       NA               conflict  #>  9 Vespasian 0069-12-21      0069       0069             majority  #> 10 Titus     0079-06-24      0079       0079             majority  #> # ℹ 129 more rows db_comp(database = emperors, key = \"ID\", variable = c(\"Beg\", \"End\"), category = \"conflict\") #> There were 116 matched observations by ID variable across datasets in database. #> # A tibble: 26 × 9 #>    ID      `wikipedia$Beg` `UNRV$Beg` `britannica$Beg` `Beg (3)` `wikipedia$End` #>    <chr>   <mdate>         <mdate>    <mdate>          <chr>     <mdate>         #>  1 August… -0026-01-16     -0027      -0031            conflict  0014-08-19      #>  2 Tiberi… 0014-09-18      -0014      0014             conflict  0037-03-16      #>  3 Caligu… 0037-03-18      NA         0037             conflict  0041-01-24      #>  4 Otho    0069-01-15      0069       0069-01          conflict  0069-04-16      #>  5 Vitell… 0069-04-17      0069       NA               conflict  0069-12-20      #>  6 Commod… 0177            0180       0177             conflict  0192-12-31      #>  7 Pertin… 0193-01-01      0193       NA               conflict  0193-03-28      #>  8 Didius… 0193-03-28      0193       NA               conflict  0193-07-01      #>  9 Caraca… 0198            0211       0198             conflict  0217-04-08      #> 10 Geta    0209            0211       NA               conflict  0211-12-26      #> # ℹ 16 more rows #> # ℹ 3 more variables: `UNRV$End` <mdate>, `britannica$End` <mdate>, #> #   `End (3)` <chr> db_comp(database = emperors, key = \"ID\", variable = c(\"Beg\", \"End\"), category = c(\"conflict\", \"unique\")) #> There were 116 matched observations by ID variable across datasets in database. #> # A tibble: 91 × 9 #>    ID      `wikipedia$Beg` `UNRV$Beg` `britannica$Beg` `Beg (3)` `wikipedia$End` #>    <chr>   <mdate>         <mdate>    <mdate>          <chr>     <mdate>         #>  1 August… -0026-01-16     -0027      -0031            conflict  0014-08-19      #>  2 Tiberi… 0014-09-18      -0014      0014             conflict  0037-03-16      #>  3 Caligu… 0037-03-18      NA         0037             conflict  0041-01-24      #>  4 Otho    0069-01-15      0069       0069-01          conflict  0069-04-16      #>  5 Vitell… 0069-04-17      0069       NA               conflict  0069-12-20      #>  6 Antoni… 0138-07-10      NA         NA               unique    0161-03-07      #>  7 Commod… 0177            0180       0177             conflict  0192-12-31      #>  8 Pertin… 0193-01-01      0193       NA               conflict  0193-03-28      #>  9 Didius… 0193-03-28      0193       NA               conflict  0193-07-01      #> 10 Septim… 0193-04-09      NA         NA               unique    0211-02-04      #> # ℹ 81 more rows #> # ℹ 3 more variables: `UNRV$End` <mdate>, `britannica$End` <mdate>, #> #   `End (3)` <chr> # }"},{"path":"https://globalgov.github.io/manydata/reference/defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions that have been renamed, superseded, or are no longer working — defunct","title":"Functions that have been renamed, superseded, or are no longer working — defunct","text":"Generally functions superseded renamed. Upon using , message provided directing user new function. However, stage package development, generally clear older defunct functions minor release, strongly encouraged use new functions/names/syntax wherever possible update scripts accordingly.","code":""},{"path":"https://globalgov.github.io/manydata/reference/defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions that have been renamed, superseded, or are no longer working — defunct","text":"","code":"coalesce_compatible(.data)  network_map(.data)"},{"path":"https://globalgov.github.io/manydata/reference/defunct.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Functions that have been renamed, superseded, or are no longer working — defunct","text":"coalesce_compatible(): Deprecated 2022-10-18. network_map(): Removed 2023-06-15.","code":""},{"path":"https://globalgov.github.io/manydata/reference/emperors.html","id":null,"dir":"Reference","previous_headings":"","what":"Emperors database documentation — emperors","title":"Emperors database documentation — emperors","text":"Emperors database documentation","code":""},{"path":"https://globalgov.github.io/manydata/reference/emperors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emperors database documentation — emperors","text":"","code":"emperors"},{"path":"https://globalgov.github.io/manydata/reference/emperors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Emperors database documentation — emperors","text":"emperors database list contains following 3 datasets: wikipedia, UNRV, britannica. information references datasets used, please use data_source() data_contrast(). functions. wikipedia: dataset 68 observations following 15 variables: ID, Beg, End, FullName, Birth, Death, CityBirth, ProvinceBirth, Rise, Cause, Killer, Dynasty, Era, Notes, Verif. UNRV: dataset 99 observations following 7 variables: ID, Beg, End, Birth, Death, FullName, Dynasty. britannica: dataset 87 observations following 3 variables: ID, Beg, End.","code":""},{"path":"https://globalgov.github.io/manydata/reference/emperors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Emperors database documentation — emperors","text":"","code":"#> $wikipedia #> ---------------------------------------------------------------------------- #> |  Column Name  |  Data Type  |  Observations  |  Missing  |  Missing (%)  | #> ---------------------------------------------------------------------------- #> |      ID       |  character  |              68|     0     |       0       | #> |      Beg      |    mdate    |              68|     0     |       0       | #> |      End      |    mdate    |              68|     0     |       0       | #> |   FullName    |  character  |              68|     0     |       0       | #> |     Birth     |  character  |              68|     5     |     7.35      | #> |     Death     |  character  |              68|     0     |       0       | #> |   CityBirth   |  character  |              68|    17     |      25       | #> | ProvinceBirth |  character  |              68|     0     |       0       | #> |     Rise      |  character  |              68|     0     |       0       | #> |     Cause     |  character  |              68|     0     |       0       | #> |    Killer     |  character  |              68|     0     |       0       | #> |    Dynasty    |  character  |              68|     0     |       0       | #> |      Era      |  character  |              68|     0     |       0       | #> |     Notes     |  character  |              68|    22     |     32.35     | #> |     Verif     |  character  |              68|    57     |     83.82     | #> ---------------------------------------------------------------------------- #>  #>  #> $UNRV #> ---------------------------------------------------------------------------- #> |  Column Name  |  Data Type  |  Observations  |  Missing  |  Missing (%)  | #> ---------------------------------------------------------------------------- #> |      ID       |  character  |              99|     0     |       0       | #> |      Beg      |    mdate    |              99|     0     |       0       | #> |      End      |    mdate    |              99|     0     |       0       | #> |     Birth     |  character  |              99|     0     |       0       | #> |     Death     |  character  |              99|     0     |       0       | #> |   FullName    |  character  |              99|     5     |     5.05      | #> |    Dynasty    |  character  |              99|    37     |     37.37     | #> ---------------------------------------------------------------------------- #>  #>  #> $britannica #> ---------------------------------------------------------------------------- #> |  Column Name  |  Data Type  |  Observations  |  Missing  |  Missing (%)  | #> ---------------------------------------------------------------------------- #> |      ID       |  character  |              87|     0     |       0       | #> |      Beg      |    mdate    |              87|     0     |       0       | #> |      End      |    mdate    |              87|     0     |       0       | #> ----------------------------------------------------------------------------"},{"path":"https://globalgov.github.io/manydata/reference/favour.html","id":null,"dir":"Reference","previous_headings":"","what":"Favour datasets in a database — favour","title":"Favour datasets in a database — favour","text":"Favour datasets database","code":""},{"path":"https://globalgov.github.io/manydata/reference/favour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Favour datasets in a database — favour","text":"","code":"favour(database, dataset)  favor(database, dataset)"},{"path":"https://globalgov.github.io/manydata/reference/favour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Favour datasets in a database — favour","text":"database many database dataset name one, , datasets within database favoured others.","code":""},{"path":"https://globalgov.github.io/manydata/reference/favour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Favour datasets in a database — favour","text":"database datasets re-ordered accordingly","code":""},{"path":"https://globalgov.github.io/manydata/reference/favour.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Favour datasets in a database — favour","text":"dataset declared becomes reference first non NA value. one dataset declared, please list datasets increasing order importance (..e. last dataset favoured previous).","code":""},{"path":"https://globalgov.github.io/manydata/reference/favour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Favour datasets in a database — favour","text":"","code":"favour(emperors, \"UNRV\") #> $UNRV #> # A tibble: 99 × 7 #>    ID               Beg     End     Birth Death FullName                 Dynasty #>    <chr>            <mdate> <mdate> <chr> <chr> <chr>                    <chr>   #>  1 Augustus         -0027   -0014   63 BC 14    Gaius Julius Caesar Oct… Julio-… #>  2 Tiberius         -0014   0037    42 BC 37    Tiberius Claudius Nero … Julio-… #>  3 Gaius (Caligula) 0037    0041    12    14    Gaius Caesar Germanicus… Julio-… #>  4 Claudius         0041    0054    10 BC 41    Tiberius Claudius Nero … Julio-… #>  5 Nero             0054    0068    37    68    Claudius Nero Caesar (b… Julio-… #>  6 Galba            0068    0069    3 BC  69    Servius Sulpicius Galba… Year o… #>  7 Otho             0069    0069    32    69    Marcus Salvius Otho / I… Year o… #>  8 Vitellius        0069    0069    15    69    Aulus Vitellius / Aulus… Year o… #>  9 Vespasian        0069    0079    9     79    Titus Flavius Vespasian… Year o… #> 10 Titus            0079    0081    39    79    Titus Flavius Vespasian… Flavian #> # ℹ 89 more rows #>  #> $wikipedia #> # A tibble: 68 × 15 #>    ID       Beg   End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause #>    <chr>    <mda> <mda> <chr>    <chr> <chr> <chr>     <chr>         <chr> <chr> #>  1 Augustus -002… 0014… IMPERAT… 0062… 0014… Rome      Italia        Birt… Assa… #>  2 Tiberius 0014… 0037… TIBERIV… 0041… 0037… Rome      Italia        Birt… Assa… #>  3 Caligula 0037… 0041… GAIVS I… 0012… 0041… Antitum   Italia        Birt… Assa… #>  4 Claudius 0041… 0054… TIBERIV… 0009… 0054… Lugdunum  Gallia Lugdu… Birt… Assa… #>  5 Nero     0054… 0068… NERO CL… 0037… 0068… Antitum   Italia        Birt… Suic… #>  6 Galba    0068… 0069… SERVIVS… 0002… 0069… Terracina Italia        Seiz… Assa… #>  7 Otho     0069… 0069… MARCVS … 0032… 0069… Terentin… Italia        Appo… Suic… #>  8 Vitelli… 0069… 0069… AVLVS V… 0015… 0069… Rome      Italia        Seiz… Assa… #>  9 Vespasi… 0069… 0079… TITVS F… 0009… 0079… Falacrine Italia        Seiz… Natu… #> 10 Titus    0079… 0081… TITVS F… 0039… 0081… Rome      Italia        Birt… Natu… #> # ℹ 58 more rows #> # ℹ 5 more variables: Killer <chr>, Dynasty <chr>, Era <chr>, Notes <chr>, #> #   Verif <chr> #>  #> $britannica #> # A tibble: 87 × 3 #>    ID              Beg     End     #>    <chr>           <mdate> <mdate> #>  1 Augustus        -0031   0014    #>  2 Tiberius        0014    0037    #>  3 Caligula        0037    0041    #>  4 Claudius        0041    0054    #>  5 Nero            0054    0068    #>  6 Galba           0068    0069    #>  7 Otho            0069-01 0069-04 #>  8 Aulus Vitellius 0069-07 0069-12 #>  9 Vespasian       0069    0079    #> 10 Titus           0079    0081    #> # ℹ 77 more rows #>  favour(emperors, c(\"wikipedia\", \"UNRV\", \"britannica\")) #> $britannica #> # A tibble: 87 × 3 #>    ID              Beg     End     #>    <chr>           <mdate> <mdate> #>  1 Augustus        -0031   0014    #>  2 Tiberius        0014    0037    #>  3 Caligula        0037    0041    #>  4 Claudius        0041    0054    #>  5 Nero            0054    0068    #>  6 Galba           0068    0069    #>  7 Otho            0069-01 0069-04 #>  8 Aulus Vitellius 0069-07 0069-12 #>  9 Vespasian       0069    0079    #> 10 Titus           0079    0081    #> # ℹ 77 more rows #>  #> $UNRV #> # A tibble: 99 × 7 #>    ID               Beg     End     Birth Death FullName                 Dynasty #>    <chr>            <mdate> <mdate> <chr> <chr> <chr>                    <chr>   #>  1 Augustus         -0027   -0014   63 BC 14    Gaius Julius Caesar Oct… Julio-… #>  2 Tiberius         -0014   0037    42 BC 37    Tiberius Claudius Nero … Julio-… #>  3 Gaius (Caligula) 0037    0041    12    14    Gaius Caesar Germanicus… Julio-… #>  4 Claudius         0041    0054    10 BC 41    Tiberius Claudius Nero … Julio-… #>  5 Nero             0054    0068    37    68    Claudius Nero Caesar (b… Julio-… #>  6 Galba            0068    0069    3 BC  69    Servius Sulpicius Galba… Year o… #>  7 Otho             0069    0069    32    69    Marcus Salvius Otho / I… Year o… #>  8 Vitellius        0069    0069    15    69    Aulus Vitellius / Aulus… Year o… #>  9 Vespasian        0069    0079    9     79    Titus Flavius Vespasian… Year o… #> 10 Titus            0079    0081    39    79    Titus Flavius Vespasian… Flavian #> # ℹ 89 more rows #>  #> $wikipedia #> # A tibble: 68 × 15 #>    ID       Beg   End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause #>    <chr>    <mda> <mda> <chr>    <chr> <chr> <chr>     <chr>         <chr> <chr> #>  1 Augustus -002… 0014… IMPERAT… 0062… 0014… Rome      Italia        Birt… Assa… #>  2 Tiberius 0014… 0037… TIBERIV… 0041… 0037… Rome      Italia        Birt… Assa… #>  3 Caligula 0037… 0041… GAIVS I… 0012… 0041… Antitum   Italia        Birt… Assa… #>  4 Claudius 0041… 0054… TIBERIV… 0009… 0054… Lugdunum  Gallia Lugdu… Birt… Assa… #>  5 Nero     0054… 0068… NERO CL… 0037… 0068… Antitum   Italia        Birt… Suic… #>  6 Galba    0068… 0069… SERVIVS… 0002… 0069… Terracina Italia        Seiz… Assa… #>  7 Otho     0069… 0069… MARCVS … 0032… 0069… Terentin… Italia        Appo… Suic… #>  8 Vitelli… 0069… 0069… AVLVS V… 0015… 0069… Rome      Italia        Seiz… Assa… #>  9 Vespasi… 0069… 0079… TITVS F… 0009… 0079… Falacrine Italia        Seiz… Natu… #> 10 Titus    0079… 0081… TITVS F… 0039… 0081… Rome      Italia        Birt… Natu… #> # ℹ 58 more rows #> # ℹ 5 more variables: Killer <chr>, Dynasty <chr>, Era <chr>, Notes <chr>, #> #   Verif <chr> #>"},{"path":"https://globalgov.github.io/manydata/reference/get_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Find and download packages in the many packages universe — get_packages","title":"Find and download packages in the many packages universe — get_packages","text":"Find download packages many packages universe.","code":""},{"path":"https://globalgov.github.io/manydata/reference/get_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find and download packages in the many packages universe — get_packages","text":"","code":"get_packages(pkg)"},{"path":"https://globalgov.github.io/manydata/reference/get_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find and download packages in the many packages universe — get_packages","text":"pkg character vector package names number package. download multiple packages , please declare package names vector (e.g. c(\"pkg1\", \"pkg2)).","code":""},{"path":"https://globalgov.github.io/manydata/reference/get_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find and download packages in the many packages universe — get_packages","text":"package name provided, function prints table (tibble) console details packages currently available within many universe. includes name description package, latest installed release version number, latest release date. also include list numbers orders package can used load respective package instead name. one package names provided, installed Github.","code":""},{"path":"https://globalgov.github.io/manydata/reference/get_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find and download packages in the many packages universe — get_packages","text":"function finds download packages belong many universe packages. allows users rapidly access names descriptive information packages simply calling function. users intend download install package universe, can type package name within function.","code":""},{"path":"https://globalgov.github.io/manydata/reference/get_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find and download packages in the many packages universe — get_packages","text":"","code":"# \\donttest{ #get_packages() # }"},{"path":"https://globalgov.github.io/manydata/reference/plot_releases.html","id":null,"dir":"Reference","previous_headings":"","what":"A plotting function that visualises historical milestones/releases — plot_releases","title":"A plotting function that visualises historical milestones/releases — plot_releases","text":"function take data frame details information, usefully, Github repository listing.","code":""},{"path":"https://globalgov.github.io/manydata/reference/plot_releases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A plotting function that visualises historical milestones/releases — plot_releases","text":"","code":"plot_releases(repo)"},{"path":"https://globalgov.github.io/manydata/reference/plot_releases.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A plotting function that visualises historical milestones/releases — plot_releases","text":"https://benalexkeen.com/creating--timeline-graphic-using-r--ggplot2/","code":""},{"path":"https://globalgov.github.io/manydata/reference/plot_releases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A plotting function that visualises historical milestones/releases — plot_releases","text":"repo github repository track, e.g. \"globalgov/manydata\"","code":""},{"path":"https://globalgov.github.io/manydata/reference/plot_releases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A plotting function that visualises historical milestones/releases — plot_releases","text":"ggplot graph object","code":""},{"path":"https://globalgov.github.io/manydata/reference/plot_releases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A plotting function that visualises historical milestones/releases — plot_releases","text":"function creates project timeline graphic using ggplot2 historical milestones milestone statuses gathered specified GitHub repository.","code":""},{"path":"https://globalgov.github.io/manydata/reference/plot_releases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A plotting function that visualises historical milestones/releases — plot_releases","text":"","code":"# \\donttest{ #plot_releases(\"globalgov/manydata\") # }"},{"path":"https://globalgov.github.io/manydata/reference/recollect.html","id":null,"dir":"Reference","previous_headings":"","what":"Pastes unique string vectors — recollect","title":"Pastes unique string vectors — recollect","text":"use dplyr::summarise, example","code":""},{"path":"https://globalgov.github.io/manydata/reference/recollect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pastes unique string vectors — recollect","text":"","code":"recollect(x, collapse = \"_\")"},{"path":"https://globalgov.github.io/manydata/reference/recollect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pastes unique string vectors — recollect","text":"x vector collapse String indicating elements separated","code":""},{"path":"https://globalgov.github.io/manydata/reference/recollect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pastes unique string vectors — recollect","text":"single value","code":""},{"path":"https://globalgov.github.io/manydata/reference/recollect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pastes unique string vectors — recollect","text":"function operates similarly reunite, instead operating columns/observations, pastes together unique rows/observations.","code":""},{"path":"https://globalgov.github.io/manydata/reference/recollect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pastes unique string vectors — recollect","text":"","code":"data <- data.frame(ID = c(1,2,3,3,2,1)) data1 <- data.frame(ID = c(1,2,3,3,2,1), One = c(1,NA,3,NA,2,NA)) recollect(data$ID) #> [1] \"1_2_3\" recollect(data1$One) #> [1] \"1_3_2\""},{"path":"https://globalgov.github.io/manydata/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Selects a single dataset from a database — reexports","title":"Selects a single dataset from a database — reexports","text":"objects imported packages. Follow links see documentation. purrr pluck","code":""},{"path":"https://globalgov.github.io/manydata/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selects a single dataset from a database — reexports","text":"selected dataset","code":""},{"path":"https://globalgov.github.io/manydata/reference/reexports.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Selects a single dataset from a database — reexports","text":"function reexported purrr package. allows users select single dataset one databases available across 'many* packages'.","code":""},{"path":"https://globalgov.github.io/manydata/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selects a single dataset from a database — reexports","text":"","code":"# \\donttest{ pluck(emperors, \"UNRV\") #> # A tibble: 99 × 7 #>    ID               Beg     End     Birth Death FullName                 Dynasty #>    <chr>            <mdate> <mdate> <chr> <chr> <chr>                    <chr>   #>  1 Augustus         -0027   -0014   63 BC 14    Gaius Julius Caesar Oct… Julio-… #>  2 Tiberius         -0014   0037    42 BC 37    Tiberius Claudius Nero … Julio-… #>  3 Gaius (Caligula) 0037    0041    12    14    Gaius Caesar Germanicus… Julio-… #>  4 Claudius         0041    0054    10 BC 41    Tiberius Claudius Nero … Julio-… #>  5 Nero             0054    0068    37    68    Claudius Nero Caesar (b… Julio-… #>  6 Galba            0068    0069    3 BC  69    Servius Sulpicius Galba… Year o… #>  7 Otho             0069    0069    32    69    Marcus Salvius Otho / I… Year o… #>  8 Vitellius        0069    0069    15    69    Aulus Vitellius / Aulus… Year o… #>  9 Vespasian        0069    0079    9     79    Titus Flavius Vespasian… Year o… #> 10 Titus            0079    0081    39    79    Titus Flavius Vespasian… Flavian #> # ℹ 89 more rows # }"},{"path":"https://globalgov.github.io/manydata/reference/repaint.html","id":null,"dir":"Reference","previous_headings":"","what":"Fills missing data by lookup — repaint","title":"Fills missing data by lookup — repaint","text":"Fills missing data known observations id/index","code":""},{"path":"https://globalgov.github.io/manydata/reference/repaint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fills missing data by lookup — repaint","text":"","code":"repaint(df, id, var)"},{"path":"https://globalgov.github.io/manydata/reference/repaint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fills missing data by lookup — repaint","text":"df dataframe id string identifying column dataframe indexing var string identifying column columns dataframe filled","code":""},{"path":"https://globalgov.github.io/manydata/reference/repaint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fills missing data by lookup — repaint","text":"dataframe","code":""},{"path":"https://globalgov.github.io/manydata/reference/repaint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fills missing data by lookup — repaint","text":"","code":"data <- data.frame(ID = c(1,2,3,3,2,1),                     One = c(1,NA,3,NA,2,NA),                     Two = c(NA,\"B\",NA,\"C\",NA,\"A\")) repaint(data, \"ID\", c(\"One\",\"Two\")) #>   ID One Two #> 1  1   1   A #> 2  2   2   B #> 3  3   3   C #> 4  3   3   C #> 5  2   2   B #> 6  1   1   A"},{"path":"https://globalgov.github.io/manydata/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"Set of data structure exploration functions for users — report","title":"Set of data structure exploration functions for users — report","text":"report family functions allows users quickly get information compare several aspects  package many packages universe, ' databases datasets.","code":""},{"path":"https://globalgov.github.io/manydata/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set of data structure exploration functions for users — report","text":"","code":"data_source(pkg, database = NULL, dataset = NULL)  data_contrast(pkg, database = NULL, dataset = NULL)  data_evolution(pkg, database, dataset, preparation_script = FALSE)  open_codebook(pkg, database, dataset)"},{"path":"https://globalgov.github.io/manydata/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set of data structure exploration functions for users — report","text":"pkg character string many package report data . Required input. database vector character strings many package report data specific database many package NULL, function returns summary databases many package NULL default data_source() data_contrast(). dataset character string many package report data specific dataset specific database many package NULL database specified, returns database level metadata. NULL default data_source() data_contrast(). preparation_script like open preparation script dataset? default false.","code":""},{"path":"https://globalgov.github.io/manydata/reference/report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set of data structure exploration functions for users — report","text":"dataframe data sources list desired metadata compare various datasets many package. Either data comparison raw available data preparation script detailing steps taken prepare raw data making available one 'many' packages. Opens pdf version original codebook specified dataset, available.","code":""},{"path":"https://globalgov.github.io/manydata/reference/report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set of data structure exploration functions for users — report","text":"data_source() displays names database/datasets source material data many package. data_contrast() displays information databases datasets contained . Namely number unique ID's, percentage missing data, number observations, number variables, minimum beginning date maximum ending date well direct URL original dataset. data_evolution() enables users access differences raw data data made available one 'many' packages. open_codebook() opens original codebook specified dataset allow users look original coding rules. Note original codebook might exist certain datasets. latter case, please refer source URL provided dataset running manydata::data_contrast() information coding rules available online.","code":""},{"path":"https://globalgov.github.io/manydata/reference/report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set of data structure exploration functions for users — report","text":"","code":"# \\donttest{ data_source(pkg = \"manydata\") #> Component 1 : #>            Reference                                                                                                     #> wikipedia  \"(????). “List_of_Roman_emperors.”<tps://en.wikipedia.org/wiki/List_of_Roman_emperors>. Accessed\" [truncated] #> UNRV       \"(????). “Roman Emperor list.”<https://www.unrv.com/government/emperor.php>. Accessed: 2021-07-2\" [truncated] #> britannica \"(????). “List of Roman emperors.”<https://www.britannica.com/topic/list-of-Roman-emperors-20432\" [truncated] #>  # } # \\donttest{ data_contrast(pkg = \"manydata\") #> emperors : #>            Unique ID Missing Data Rows Columns         Beg        End #> wikipedia         68        9.9 %   68      15 -0026-01-16 0014-08-19 #> UNRV              98       6.06 %   99       7   -27-01-01  -14-12-31 #> britannica        87          0 %   87       3   -31-01-01   14-12-31 #>                                                                        URL #> wikipedia                           https://github.com/zonination/emperors #> UNRV                           https://www.unrv.com/government/emperor.php #> britannica https://www.britannica.com/topic/list-of-Roman-emperors-2043294 #>  # } # \\donttest{ data_evolution(pkg = \"manydata\", database = \"emperors\", dataset = \"wikipedia\") #> Raw data could not be open or is not available for this dataset, #>               opening preparation script instead. #> [1] 0 #data_evolution(pkg = \"manytrade\", database = \"agreements\", #dataset = \"GPTAD\") # }"},{"path":"https://globalgov.github.io/manydata/reference/retrieve_treaty.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve international treaties — retrieve_treaty","title":"Retrieve international treaties — retrieve_treaty","text":"databases datasets across 'many* packages' (e.g. manyenviron) contain myriad information international treaties governing international domain. Researchers can, example, use retrieve_bilaterals() retrieve countries signed bilateral agreements respective year. Alternatively, researchers can use retrieve_multilaterals() retrieve titles multilateral agreements signed past 10 years. Alternatively, researchers can retrieve treaties modify, amend, expand treaties retrieve_links(). , even, researchers can retrieve membership lists countries part certain treaty retrieve_membership_list(). Finally, researchers can retrieve treaty texts available 'many' datasets retrieve_texts(). retrieve information several datasets database, researchers can consolidate() database one dataset combination rows, columns, observations getting desired information.","code":""},{"path":"https://globalgov.github.io/manydata/reference/retrieve_treaty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve international treaties — retrieve_treaty","text":"","code":"retrieve_bilaterals(dataset)  retrieve_multilaterals(dataset)  retrieve_membership_list(dataset, actor = \"StateID\", treaty_type = NULL)  retrieve_links(dataset, treaty_type = NULL)  retrieve_texts(dataset, treaty_type = NULL)"},{"path":"https://globalgov.github.io/manydata/reference/retrieve_treaty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve international treaties — retrieve_treaty","text":"dataset dataset one many packages. actor actor variable. \"StateID\", default. treaty_type type treaties returned. NULL, default. options \"bilateral\" \"multilateral\".","code":""},{"path":"https://globalgov.github.io/manydata/reference/retrieve_treaty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve international treaties — retrieve_treaty","text":"tibble bilateral agreements. tibble multilateral agreements. tibble manyIDs countries part treaty. tibble manyIDs links. tibble manyIDs texts.","code":""},{"path":"https://globalgov.github.io/manydata/reference/retrieve_treaty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve international treaties — retrieve_treaty","text":"","code":"membs <- tibble::tibble(manyID = c(\"ROU-RUS[RFP]_1901A\", \"ROU-RUS[RFP]_1901E\", \"GD16FI_1901A\"), Title = c(\"Convention Between Roumania And Russia Concerning Fishing In The Danube And The Pruth\", \"Convention Between Roumania And Russia Concerning Fishing In The Danube And The Pruth\", \"Convention Between The Governments Of Denmark And The United Kingdom Of Great Britain And Northern Ireland For Regulating The Fisheries Of Their Respective Subjects Outside Territorial Waters In The Ocean Surrounding The Faroe Islands\"), Beg = c(\"1901-02-22\", \"1901-02-22\", \"1901-06-24\")) retrieve_bilaterals(membs) #> # A tibble: 2 × 5 #>   manyID             StateID1 StateID2 Title                               Beg   #>   <chr>              <chr>    <chr>    <chr>                               <chr> #> 1 ROU-RUS[RFP]_1901A ROU      RUS      \"Convention Between Roumania And R… 1901… #> 2 ROU-RUS[RFP]_1901E ROU      RUS      \"Convention Between Roumania And R… 1901… membs <- tibble::tibble( manyID = c(\"ROU-RUS[RFP]_1901A\", \"ROU-RUS[RFP]_1901A\", \"GD16FI_1901A\"), Title = c(\"Convention Between Roumania And Russia Concerning Fishing In The Danube And The Pruth\", \"Convention Between Roumania And Russia Concerning Fishing In The Danube And The Pruth\", \"Convention Between The Governments Of Denmark And The United Kingdom Of Great Britain And Northern Ireland For Regulating The Fisheries Of Their Respective Subjects Outside Territorial Waters In The Ocean Surrounding The Faroe Islands\"), Beg = c(\"1901-02-22\", \"1901-02-22\", \"1901-06-24\")) retrieve_multilaterals(membs) #> # A tibble: 1 × 3 #>   manyID       Title                                                       Beg   #>   <chr>        <chr>                                                       <chr> #> 1 GD16FI_1901A \"Convention Between The Governments Of Denmark And\\nThe Un… 1901… membs <- tibble::tibble(StateID = c(\"ROU\", \"RUS\", \"DNK\"), manyID = c(\"ROU-RUS[RFP]_1901A\", \"ROU-RUS[RFP]_1901A\", \"GD16FI_1901A\")) retrieve_membership_list(dataset = membs) #> # A tibble: 2 × 2 #>   manyID             Memberships #>   <chr>              <chr>       #> 1 ROU-RUS[RFP]_1901A ROU, RUS    #> 2 GD16FI_1901A       DNK         membs <- tibble::tibble(manyID = c(\"ROU-RUS[RFP]_1901A\", \"ROU-RUS[RFP]_1901A:ROU-RUS[RFP]_1901A\", \"GD16FI_1901A\")) retrieve_links(dataset = membs) #> # A tibble: 1 × 2 #>   Agreement          Link               #>   <chr>              <chr>              #> 1 ROU-RUS[RFP]_1901A ROU-RUS[RFP]_1901A membs <- tibble::tibble(manyID = c(\"ROU-RUS[RFP]_1901A\", \"ROU-RUS[RFP]_1901A:ROU-RUS[RFP]_1901A\", \"GD16FI_1901A\"), Text = c(\"treaty 1\", \"treaty 2\", \"treaty 3\")) retrieve_texts(dataset = membs) #> # A tibble: 3 × 2 #>   manyID                                Text     #>   <chr>                                 <chr>    #> 1 ROU-RUS[RFP]_1901A                    treaty 1 #> 2 ROU-RUS[RFP]_1901A:ROU-RUS[RFP]_1901A treaty 2 #> 3 GD16FI_1901A                          treaty 3 #retrieve_texts(dataset = manyenviron::agreements$HUGGO)"},{"path":"https://globalgov.github.io/manydata/reference/reunite.html","id":null,"dir":"Reference","previous_headings":"","what":"Pastes unique string vectors — reunite","title":"Pastes unique string vectors — reunite","text":"vectorised function use dplyr's mutate, etc","code":""},{"path":"https://globalgov.github.io/manydata/reference/reunite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pastes unique string vectors — reunite","text":"","code":"reunite(..., sep = \"_\")"},{"path":"https://globalgov.github.io/manydata/reference/reunite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pastes unique string vectors — reunite","text":"... Variables pass function, currently two time sep Separator vectors reunited, default \"_\"","code":""},{"path":"https://globalgov.github.io/manydata/reference/reunite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pastes unique string vectors — reunite","text":"single vector unique non-missing information","code":""},{"path":"https://globalgov.github.io/manydata/reference/reunite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pastes unique string vectors — reunite","text":"","code":"data <- data.frame(fir=c(NA, \"two\", \"three\", NA),                    sec=c(\"one\", NA, \"three\", NA), stringsAsFactors = FALSE) transmutate(data, single = reunite(fir, sec)) #>   single #> 1    one #> 2    two #> 3  three #> 4   <NA>"},{"path":"https://globalgov.github.io/manydata/reference/transmutate.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop only columns used in formula — transmutate","title":"Drop only columns used in formula — transmutate","text":"function dplyr's transmute mutate","code":""},{"path":"https://globalgov.github.io/manydata/reference/transmutate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop only columns used in formula — transmutate","text":"","code":"transmutate(.data, ...)"},{"path":"https://globalgov.github.io/manydata/reference/transmutate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Drop only columns used in formula — transmutate","text":"https://stackoverflow.com/questions/51428156/dplyr-mutate-transmute-drop---columns-used---formula","code":""},{"path":"https://globalgov.github.io/manydata/reference/transmutate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop only columns used in formula — transmutate","text":".data Data frame pass function ... Variables pass function","code":""},{"path":"https://globalgov.github.io/manydata/reference/transmutate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop only columns used in formula — transmutate","text":"Data frame mutated variables none variables used mutations, , unlike dplyr::transmute(), unnamed variables.","code":""},{"path":"https://globalgov.github.io/manydata/reference/transmutate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop only columns used in formula — transmutate","text":"","code":"pluck(emperors, \"wikipedia\") #> # A tibble: 68 × 15 #>    ID       Beg   End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause #>    <chr>    <mda> <mda> <chr>    <chr> <chr> <chr>     <chr>         <chr> <chr> #>  1 Augustus -002… 0014… IMPERAT… 0062… 0014… Rome      Italia        Birt… Assa… #>  2 Tiberius 0014… 0037… TIBERIV… 0041… 0037… Rome      Italia        Birt… Assa… #>  3 Caligula 0037… 0041… GAIVS I… 0012… 0041… Antitum   Italia        Birt… Assa… #>  4 Claudius 0041… 0054… TIBERIV… 0009… 0054… Lugdunum  Gallia Lugdu… Birt… Assa… #>  5 Nero     0054… 0068… NERO CL… 0037… 0068… Antitum   Italia        Birt… Suic… #>  6 Galba    0068… 0069… SERVIVS… 0002… 0069… Terracina Italia        Seiz… Assa… #>  7 Otho     0069… 0069… MARCVS … 0032… 0069… Terentin… Italia        Appo… Suic… #>  8 Vitelli… 0069… 0069… AVLVS V… 0015… 0069… Rome      Italia        Seiz… Assa… #>  9 Vespasi… 0069… 0079… TITVS F… 0009… 0079… Falacrine Italia        Seiz… Natu… #> 10 Titus    0079… 0081… TITVS F… 0039… 0081… Rome      Italia        Birt… Natu… #> # ℹ 58 more rows #> # ℹ 5 more variables: Killer <chr>, Dynasty <chr>, Era <chr>, Notes <chr>, #> #   Verif <chr> transmutate(emperors$wikipedia, Beginning = Beg) #> # A tibble: 68 × 15 #>    ID      End   FullName Birth Death CityBirth ProvinceBirth Rise  Cause Killer #>    <chr>   <mda> <chr>    <chr> <chr> <chr>     <chr>         <chr> <chr> <chr>  #>  1 August… 0014… IMPERAT… 0062… 0014… Rome      Italia        Birt… Assa… Wife   #>  2 Tiberi… 0037… TIBERIV… 0041… 0037… Rome      Italia        Birt… Assa… Other… #>  3 Caligu… 0041… GAIVS I… 0012… 0041… Antitum   Italia        Birt… Assa… Senate #>  4 Claudi… 0054… TIBERIV… 0009… 0054… Lugdunum  Gallia Lugdu… Birt… Assa… Wife   #>  5 Nero    0068… NERO CL… 0037… 0068… Antitum   Italia        Birt… Suic… Senate #>  6 Galba   0069… SERVIVS… 0002… 0069… Terracina Italia        Seiz… Assa… Other… #>  7 Otho    0069… MARCVS … 0032… 0069… Terentin… Italia        Appo… Suic… Other… #>  8 Vitell… 0069… AVLVS V… 0015… 0069… Rome      Italia        Seiz… Assa… Other… #>  9 Vespas… 0079… TITVS F… 0009… 0079… Falacrine Italia        Seiz… Natu… Disea… #> 10 Titus   0081… TITVS F… 0039… 0081… Rome      Italia        Birt… Natu… Disea… #> # ℹ 58 more rows #> # ℹ 5 more variables: Dynasty <chr>, Era <chr>, Notes <chr>, Verif <chr>, #> #   Beginning <mdate>"},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-8-3","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.8.3","text":"Made ´network_map()´ function defunct","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-082","dir":"Changelog","previous_headings":"","what":"manydata 0.8.2","title":"manydata 0.8.2","text":"CRAN release: 2022-11-19","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-8-2","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.8.2","text":"Updated ´consolidate()´ require two keys joining memberships’ databases Updated ´db_comp()´ follow consolidation defaults memberships’ databases Closed #231 adding ´retrieve_texts()´ function retrieve treaty texts ‘many’ packages","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-081","dir":"Changelog","previous_headings":"","what":"manydata 0.8.1","title":"manydata 0.8.1","text":"CRAN release: 2022-11-11","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-8-1","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.8.1","text":"Added ‘RDataTmp’ files Rbuildignore .gitignore Updated ´data_evolution()´ use ´inherits()´ instead ´class()´ condition comparison","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-8-0","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.8.0","text":"Closed #212 implementing package caching GitHub actions workflows Closed #218 fixing bug GitHub actions workflows Closed #225 changing structure datasets “many” data packages Closed #240 updating package cheatsheet","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-8-0","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.8.0","text":"Closed #134 adding ´data_evolution()´ function report family functions gets original datasets, available, opens preparation scripts, available Closed #214 adding ´db_plot()´ function plot profile database facilitate comparison matched observations across datasets Closed #224 adding ´db_comp()´ function creates tibble database facilitate comparison matched observations across datasets Closed #215 making ´get_packages()´ interactive users can chose branch download Closed #219 improving ´get_packages()´ printing Updated ´get_packages()´ ´plot_releases()´ use ´{messydates}´, instead ´{lubridate}´, dates coercion Closed #222 adding ´network_map()´function plotting geographical networks Closed #227 making ´consolidate()´ ignore text related variables due size Closed #230 making ´consolidate()´ concise avoid running memory limits Closed #228 #232 replacing ´coalesce_compatible()´ faster approach coalescing compatible missing observations relies ´zoo::na.locf()´ Made ´coalesce_compatible()´ function defunct","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-075","dir":"Changelog","previous_headings":"","what":"manydata 0.7.5","title":"manydata 0.7.5","text":"CRAN release: 2022-06-07","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-7-5","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.7.5","text":"Removed skimr table emperors database documentation Updated path binaries push release GitHub actions","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-7-4","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.7.4","text":"Closed #187 updating GitHub actions implement package caching Closed #209 removing non-ASCII characters package Closed #210 removing pkgdown dependency Updated emperors data contain correct date class name consistent {messydates}","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-073","dir":"Changelog","previous_headings":"","what":"manydata 0.7.3","title":"manydata 0.7.3","text":"CRAN release: 2022-04-01","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-7-3","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.7.3","text":"Updated get_packages() function identifies installed packages avoid using installed.packages() Updated documentation coalesce_compatible() function include returns","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"manydata-072","dir":"Changelog","previous_headings":"","what":"manydata 0.7.2","title":"manydata 0.7.2","text":"Ignored CRAN-SUBMISSION resubmitted.","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-7-1","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.7.1","text":"Updated DESCRIPTION removing ambiguous word title Updated README correcting URL life cycle badge","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-7-1","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.7.1","text":"Updated helper functions consolidate() use inherits() identify variable’s class","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-7-0","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.7.0","text":"Closed #194 updating remaining references “qID” “manyID” Closed #196 updating elements configure website work properly Updated ’_pkgdown.yml’ file use bootstrap 5 template build website","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-7-0","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.7.0","text":"Closed #191 making consolidate() function concise faster removing redundant code lines Fixed dates-related warnings changing {messydates} package used resolve dates Updated consolidate() substitutes missing observations first non-missing observation datasets Closed #201 fixing consolidate() detects variables resolved avoid ambiguous variable matching Closed #202 allowing multiple key vectors declared arguments consolidate() Closed #199 adding favour() (also favor()) function re-orders datasets within database","code":""},{"path":[]},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"package-0-6-0","dir":"Changelog","previous_headings":"","what":"Package","title":"manydata 0.6.0","text":"Closed #189 renaming package {qData} manydata Updated user vignette include examples working consolidate() Updated package website Closed #167 adding cheatsheet README","code":""},{"path":"https://globalgov.github.io/manydata/news/index.html","id":"connection-0-6-0","dir":"Changelog","previous_headings":"","what":"Connection","title":"manydata 0.6.0","text":"Closed #169 making default key variable “many_ID” instead “qID” Added “max” resolve argument resolves conflicts favor largest non NA value Added “min” resolve argument resolves conflicts favor smallest non NA value Added “mean” resolve argument resolves conflicts favor average non NA value Added “median” resolve argument resolves conflicts favor median non NA value Added “random” resolve argument resolves conflicts favor random non NA value Closed #185 making users can specify resolve argument differently different variables Closed #188 adding informative warnings GitHub download limits get_packages() function Added extract_bilaterals() extracting adjacency edgelist bilateral agreements Added extract_multilaterals() extracting adjacency edgelist multilateral agreements","code":""}]
